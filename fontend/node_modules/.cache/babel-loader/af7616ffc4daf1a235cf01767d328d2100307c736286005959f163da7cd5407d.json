{"ast":null,"code":"import React, { useState, useEffect, useRef, useMemo, useCallback, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport getContainer from 'dom-lib/getContainer';\nimport ownerDocument from 'dom-lib/ownerDocument';\nimport removeClass from 'dom-lib/removeClass';\nimport on from 'dom-lib/on';\nimport addClass from 'dom-lib/addClass';\nimport addStyle from 'dom-lib/addStyle';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport isElement from '../DOMHelper/isElement';\nimport positionUtils from './positionUtils';\nimport { getDOMNode } from '../utils';\nimport { useUpdateEffect } from '../utils';\nvar usePosition = function usePosition(props, ref) {\n  var _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'right' : _props$placement,\n    _props$preventOverflo = props.preventOverflow,\n    preventOverflow = _props$preventOverflo === void 0 ? false : _props$preventOverflo,\n    _props$containerPaddi = props.containerPadding,\n    containerPadding = _props$containerPaddi === void 0 ? 0 : _props$containerPaddi,\n    container = props.container,\n    triggerTarget = props.triggerTarget,\n    followCursor = props.followCursor,\n    cursorPosition = props.cursorPosition;\n  var containerRef = useRef(null);\n  var lastTargetRef = useRef(null);\n  var overlayResizeObserver = useRef();\n  var defaultPosition = {\n    positionLeft: 0,\n    positionTop: 0,\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined\n  };\n  var _useState = useState(defaultPosition),\n    position = _useState[0],\n    setPosition = _useState[1];\n  var utils = useMemo(function () {\n    return positionUtils({\n      placement: placement,\n      preventOverflow: preventOverflow,\n      padding: containerPadding\n    });\n  }, [placement, preventOverflow, containerPadding]);\n  var updatePosition = useCallback(\n  /**\n   * @param placementChanged  Whether the placement has changed\n   * @param forceUpdateDOM Whether to update the DOM directly\n   * @returns void\n   */\n  function (placementChanged, forceUpdateDOM) {\n    if (placementChanged === void 0) {\n      placementChanged = true;\n    }\n    if (!(triggerTarget !== null && triggerTarget !== void 0 && triggerTarget.current)) {\n      return;\n    }\n    var targetElement = getDOMNode(triggerTarget);\n    if (!isElement(targetElement)) {\n      throw new Error('`target` should return an HTMLElement');\n    } //  If the target and placement do not change, the position is not updated.\n\n    if (targetElement === lastTargetRef.current && !placementChanged) {\n      return;\n    }\n    var overlay = getDOMNode(ref.current);\n    var containerElement = getContainer(typeof container === 'function' ? container() : container !== null && container !== void 0 ? container : null, ownerDocument(ref.current).body);\n    var posi = utils.calcOverlayPosition(overlay, targetElement, containerElement, followCursor ? cursorPosition : undefined);\n    if (forceUpdateDOM && overlay) {\n      var _overlay$className, _overlay$className$ma;\n      var preClassName = overlay === null || overlay === void 0 ? void 0 : (_overlay$className = overlay.className) === null || _overlay$className === void 0 ? void 0 : (_overlay$className$ma = _overlay$className.match(/(placement-\\S+)/)) === null || _overlay$className$ma === void 0 ? void 0 : _overlay$className$ma[0];\n      removeClass(overlay, preClassName);\n      if (posi.positionClassName) {\n        addClass(overlay, posi.positionClassName);\n      }\n      addStyle(overlay, {\n        left: posi.positionLeft + \"px\",\n        top: posi.positionTop + \"px\"\n      });\n    } else {\n      setPosition(posi);\n    }\n    containerRef.current = containerElement;\n    lastTargetRef.current = targetElement;\n  }, [container, ref, triggerTarget, utils, followCursor, cursorPosition]);\n  useEffect(function () {\n    updatePosition(false);\n    var overlay = getDOMNode(ref.current);\n    var containerScrollListener;\n    if (containerRef.current && preventOverflow) {\n      var _containerRef$current;\n\n      // Update the overlay position when the container scroll bar is scrolling\n      containerScrollListener = on(((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.tagName) === 'BODY' ? window : containerRef.current, 'scroll', function () {\n        return updatePosition(true, true);\n      });\n    } // Update the position when the window size changes\n\n    var resizeListener = on(window, 'resize', function () {\n      return updatePosition(true, true);\n    });\n    if (overlay) {\n      // Update the position when the size of the overlay changes\n      overlayResizeObserver.current = new ResizeObserver(function () {\n        return updatePosition(true, true);\n      });\n      overlayResizeObserver.current.observe(overlay);\n    }\n    return function () {\n      var _containerScrollListe, _overlayResizeObserve;\n      lastTargetRef.current = null;\n      (_containerScrollListe = containerScrollListener) === null || _containerScrollListe === void 0 ? void 0 : _containerScrollListe.off();\n      resizeListener === null || resizeListener === void 0 ? void 0 : resizeListener.off();\n      (_overlayResizeObserve = overlayResizeObserver.current) === null || _overlayResizeObserve === void 0 ? void 0 : _overlayResizeObserve.disconnect();\n    };\n  }, [preventOverflow, ref, updatePosition]);\n  useUpdateEffect(function () {\n    return updatePosition();\n  }, [updatePosition, placement]);\n  return [position, updatePosition];\n};\nvar Position = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n    className = props.className,\n    followCursor = props.followCursor,\n    cursorPosition = props.cursorPosition;\n  var childRef = React.useRef(null);\n  var _usePosition = usePosition(props, childRef),\n    position = _usePosition[0],\n    updatePosition = _usePosition[1];\n  var positionClassName = position.positionClassName,\n    arrowOffsetLeft = position.arrowOffsetLeft,\n    arrowOffsetTop = position.arrowOffsetTop,\n    positionLeft = position.positionLeft,\n    positionTop = position.positionTop;\n  useImperativeHandle(ref, function () {\n    return {\n      get child() {\n        return childRef.current;\n      },\n      updatePosition: updatePosition\n    };\n  });\n  useEffect(function () {\n    if (!followCursor || !cursorPosition) return;\n    updatePosition();\n  }, [followCursor, cursorPosition, updatePosition]);\n  if (typeof children === 'function') {\n    var childProps = {\n      className: classNames(className, positionClassName),\n      arrowOffsetLeft: arrowOffsetLeft,\n      arrowOffsetTop: arrowOffsetTop,\n      left: positionLeft,\n      top: positionTop\n    };\n    return children(childProps, childRef);\n  }\n  return children;\n});\nPosition.displayName = 'Position';\nPosition.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.func.isRequired,\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.any]),\n  containerPadding: PropTypes.number,\n  placement: PropTypes.any,\n  preventOverflow: PropTypes.bool,\n  triggerTarget: PropTypes.any\n};\nexport default Position;","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","useCallback","useImperativeHandle","PropTypes","classNames","getContainer","ownerDocument","removeClass","on","addClass","addStyle","ResizeObserver","isElement","positionUtils","getDOMNode","useUpdateEffect","usePosition","props","ref","_props$placement","placement","_props$preventOverflo","preventOverflow","_props$containerPaddi","containerPadding","container","triggerTarget","followCursor","cursorPosition","containerRef","lastTargetRef","overlayResizeObserver","defaultPosition","positionLeft","positionTop","arrowOffsetLeft","undefined","arrowOffsetTop","_useState","position","setPosition","utils","padding","updatePosition","placementChanged","forceUpdateDOM","current","targetElement","Error","overlay","containerElement","body","posi","calcOverlayPosition","_overlay$className","_overlay$className$ma","preClassName","className","match","positionClassName","left","top","containerScrollListener","_containerRef$current","tagName","window","resizeListener","observe","_containerScrollListe","_overlayResizeObserve","off","disconnect","Position","forwardRef","children","childRef","_usePosition","child","childProps","displayName","propTypes","string","func","isRequired","oneOfType","any","number","bool"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/rsuite/esm/Overlay/Position.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo, useCallback, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport getContainer from 'dom-lib/getContainer';\nimport ownerDocument from 'dom-lib/ownerDocument';\nimport removeClass from 'dom-lib/removeClass';\nimport on from 'dom-lib/on';\nimport addClass from 'dom-lib/addClass';\nimport addStyle from 'dom-lib/addStyle';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport isElement from '../DOMHelper/isElement';\nimport positionUtils from './positionUtils';\nimport { getDOMNode } from '../utils';\nimport { useUpdateEffect } from '../utils';\n\nvar usePosition = function usePosition(props, ref) {\n  var _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'right' : _props$placement,\n      _props$preventOverflo = props.preventOverflow,\n      preventOverflow = _props$preventOverflo === void 0 ? false : _props$preventOverflo,\n      _props$containerPaddi = props.containerPadding,\n      containerPadding = _props$containerPaddi === void 0 ? 0 : _props$containerPaddi,\n      container = props.container,\n      triggerTarget = props.triggerTarget,\n      followCursor = props.followCursor,\n      cursorPosition = props.cursorPosition;\n  var containerRef = useRef(null);\n  var lastTargetRef = useRef(null);\n  var overlayResizeObserver = useRef();\n  var defaultPosition = {\n    positionLeft: 0,\n    positionTop: 0,\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined\n  };\n\n  var _useState = useState(defaultPosition),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var utils = useMemo(function () {\n    return positionUtils({\n      placement: placement,\n      preventOverflow: preventOverflow,\n      padding: containerPadding\n    });\n  }, [placement, preventOverflow, containerPadding]);\n  var updatePosition = useCallback(\n  /**\n   * @param placementChanged  Whether the placement has changed\n   * @param forceUpdateDOM Whether to update the DOM directly\n   * @returns void\n   */\n  function (placementChanged, forceUpdateDOM) {\n    if (placementChanged === void 0) {\n      placementChanged = true;\n    }\n\n    if (!(triggerTarget !== null && triggerTarget !== void 0 && triggerTarget.current)) {\n      return;\n    }\n\n    var targetElement = getDOMNode(triggerTarget);\n\n    if (!isElement(targetElement)) {\n      throw new Error('`target` should return an HTMLElement');\n    } //  If the target and placement do not change, the position is not updated.\n\n\n    if (targetElement === lastTargetRef.current && !placementChanged) {\n      return;\n    }\n\n    var overlay = getDOMNode(ref.current);\n    var containerElement = getContainer(typeof container === 'function' ? container() : container !== null && container !== void 0 ? container : null, ownerDocument(ref.current).body);\n    var posi = utils.calcOverlayPosition(overlay, targetElement, containerElement, followCursor ? cursorPosition : undefined);\n\n    if (forceUpdateDOM && overlay) {\n      var _overlay$className, _overlay$className$ma;\n\n      var preClassName = overlay === null || overlay === void 0 ? void 0 : (_overlay$className = overlay.className) === null || _overlay$className === void 0 ? void 0 : (_overlay$className$ma = _overlay$className.match(/(placement-\\S+)/)) === null || _overlay$className$ma === void 0 ? void 0 : _overlay$className$ma[0];\n      removeClass(overlay, preClassName);\n\n      if (posi.positionClassName) {\n        addClass(overlay, posi.positionClassName);\n      }\n\n      addStyle(overlay, {\n        left: posi.positionLeft + \"px\",\n        top: posi.positionTop + \"px\"\n      });\n    } else {\n      setPosition(posi);\n    }\n\n    containerRef.current = containerElement;\n    lastTargetRef.current = targetElement;\n  }, [container, ref, triggerTarget, utils, followCursor, cursorPosition]);\n  useEffect(function () {\n    updatePosition(false);\n    var overlay = getDOMNode(ref.current);\n    var containerScrollListener;\n\n    if (containerRef.current && preventOverflow) {\n      var _containerRef$current;\n\n      // Update the overlay position when the container scroll bar is scrolling\n      containerScrollListener = on(((_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.tagName) === 'BODY' ? window : containerRef.current, 'scroll', function () {\n        return updatePosition(true, true);\n      });\n    } // Update the position when the window size changes\n\n\n    var resizeListener = on(window, 'resize', function () {\n      return updatePosition(true, true);\n    });\n\n    if (overlay) {\n      // Update the position when the size of the overlay changes\n      overlayResizeObserver.current = new ResizeObserver(function () {\n        return updatePosition(true, true);\n      });\n      overlayResizeObserver.current.observe(overlay);\n    }\n\n    return function () {\n      var _containerScrollListe, _overlayResizeObserve;\n\n      lastTargetRef.current = null;\n      (_containerScrollListe = containerScrollListener) === null || _containerScrollListe === void 0 ? void 0 : _containerScrollListe.off();\n      resizeListener === null || resizeListener === void 0 ? void 0 : resizeListener.off();\n      (_overlayResizeObserve = overlayResizeObserver.current) === null || _overlayResizeObserve === void 0 ? void 0 : _overlayResizeObserve.disconnect();\n    };\n  }, [preventOverflow, ref, updatePosition]);\n  useUpdateEffect(function () {\n    return updatePosition();\n  }, [updatePosition, placement]);\n  return [position, updatePosition];\n};\n\nvar Position = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className,\n      followCursor = props.followCursor,\n      cursorPosition = props.cursorPosition;\n  var childRef = React.useRef(null);\n\n  var _usePosition = usePosition(props, childRef),\n      position = _usePosition[0],\n      updatePosition = _usePosition[1];\n\n  var positionClassName = position.positionClassName,\n      arrowOffsetLeft = position.arrowOffsetLeft,\n      arrowOffsetTop = position.arrowOffsetTop,\n      positionLeft = position.positionLeft,\n      positionTop = position.positionTop;\n  useImperativeHandle(ref, function () {\n    return {\n      get child() {\n        return childRef.current;\n      },\n\n      updatePosition: updatePosition\n    };\n  });\n  useEffect(function () {\n    if (!followCursor || !cursorPosition) return;\n    updatePosition();\n  }, [followCursor, cursorPosition, updatePosition]);\n\n  if (typeof children === 'function') {\n    var childProps = {\n      className: classNames(className, positionClassName),\n      arrowOffsetLeft: arrowOffsetLeft,\n      arrowOffsetTop: arrowOffsetTop,\n      left: positionLeft,\n      top: positionTop\n    };\n    return children(childProps, childRef);\n  }\n\n  return children;\n});\nPosition.displayName = 'Position';\nPosition.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.func.isRequired,\n  container: PropTypes.oneOfType([PropTypes.func, PropTypes.any]),\n  containerPadding: PropTypes.number,\n  placement: PropTypes.any,\n  preventOverflow: PropTypes.bool,\n  triggerTarget: PropTypes.any\n};\nexport default Position;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}