{"ast":null,"code":"import formatErrorMessage from './formatErrorMessage';\nfunction isObj(o) {\n  return o != null && (typeof o === 'object' || typeof o == 'function');\n}\nfunction isPromiseLike(v) {\n  return v instanceof Promise || isObj(v) && typeof v.then === 'function';\n}\n/**\n * Create a data validator\n * @param data\n */\nexport function createValidator(data, name) {\n  return (value, rules) => {\n    for (let i = 0; i < rules.length; i += 1) {\n      const {\n        onValid,\n        errorMessage,\n        params,\n        isAsync\n      } = rules[i];\n      if (isAsync) continue;\n      const checkResult = onValid(value, data, name);\n      if (checkResult === false) {\n        return {\n          hasError: true,\n          errorMessage: formatErrorMessage(errorMessage, {\n            ...params,\n            name: Array.isArray(name) ? name.join('.') : name\n          })\n        };\n      } else if (isPromiseLike(checkResult)) {\n        throw new Error('synchronous validator had an async result, you should probably call \"checkAsync()\"');\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\n        return checkResult;\n      }\n    }\n    return null;\n  };\n}\nexport default createValidator;","map":{"version":3,"mappings":"AACA,OAAOA,kBAAkB,MAAM,sBAAsB;AACrD,SAASC,KAAK,CAACC,CAAU;EACvB,OAAOA,CAAC,IAAI,IAAI,KAAK,OAAOA,CAAC,KAAK,QAAQ,IAAI,OAAOA,CAAC,IAAI,UAAU,CAAC;AACvE;AACA,SAASC,aAAa,CAACC,CAAU;EAC/B,OAAOA,CAAC,YAAYC,OAAO,IAAKJ,KAAK,CAACG,CAAC,CAAC,IAAI,OAAOA,CAAC,CAACE,IAAI,KAAK,UAAW;AAC3E;AACA;;;;AAIA,OAAM,SAAUC,eAAe,CAAUC,IAAQ,EAAEC,IAAwB;EACzE,OAAO,CAACC,KAAQ,EAAEC,KAA0B,KAA2B;IACrE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACxC,MAAM;QAAEE,OAAO;QAAEC,YAAY;QAAEC,MAAM;QAAEC;MAAO,CAAE,GAAGN,KAAK,CAACC,CAAC,CAAC;MAC3D,IAAIK,OAAO,EAAE;MACb,MAAMC,WAAW,GAAGJ,OAAO,CAACJ,KAAK,EAAEF,IAAI,EAAEC,IAAI,CAAC;MAE9C,IAAIS,WAAW,KAAK,KAAK,EAAE;QACzB,OAAO;UACLC,QAAQ,EAAE,IAAI;UACdJ,YAAY,EAAEf,kBAAkB,CAAIe,YAAY,EAAE;YAChD,GAAGC,MAAM;YACTP,IAAI,EAAEW,KAAK,CAACC,OAAO,CAACZ,IAAI,CAAC,GAAGA,IAAI,CAACa,IAAI,CAAC,GAAG,CAAC,GAAGb;WAC9C;SACF;OACF,MAAM,IAAIN,aAAa,CAACe,WAAW,CAAC,EAAE;QACrC,MAAM,IAAIK,KAAK,CACb,oFAAoF,CACrF;OACF,MAAM,IAAI,OAAOL,WAAW,KAAK,QAAQ,KAAKA,WAAW,CAACC,QAAQ,IAAID,WAAW,CAACM,KAAK,CAAC,EAAE;QACzF,OAAON,WAAW;;;IAItB,OAAO,IAAI;EACb,CAAC;AACH;AAEA,eAAeX,eAAe","names":["formatErrorMessage","isObj","o","isPromiseLike","v","Promise","then","createValidator","data","name","value","rules","i","length","onValid","errorMessage","params","isAsync","checkResult","hasError","Array","isArray","join","Error","array"],"sources":["/Users/peeranat/Desktop/Project/fontend/node_modules/schema-typed/src/utils/createValidator.ts"],"sourcesContent":["import { CheckResult, RuleType } from '../types';\nimport formatErrorMessage from './formatErrorMessage';\nfunction isObj(o: unknown): o is Record<PropertyKey, unknown> {\n  return o != null && (typeof o === 'object' || typeof o == 'function');\n}\nfunction isPromiseLike(v: unknown): v is Promise<unknown> {\n  return v instanceof Promise || (isObj(v) && typeof v.then === 'function');\n}\n/**\n * Create a data validator\n * @param data\n */\nexport function createValidator<V, D, E>(data?: D, name?: string | string[]) {\n  return (value: V, rules: RuleType<V, D, E>[]): CheckResult<E> | null => {\n    for (let i = 0; i < rules.length; i += 1) {\n      const { onValid, errorMessage, params, isAsync } = rules[i];\n      if (isAsync) continue;\n      const checkResult = onValid(value, data, name);\n\n      if (checkResult === false) {\n        return {\n          hasError: true,\n          errorMessage: formatErrorMessage<E>(errorMessage, {\n            ...params,\n            name: Array.isArray(name) ? name.join('.') : name\n          })\n        };\n      } else if (isPromiseLike(checkResult)) {\n        throw new Error(\n          'synchronous validator had an async result, you should probably call \"checkAsync()\"'\n        );\n      } else if (typeof checkResult === 'object' && (checkResult.hasError || checkResult.array)) {\n        return checkResult;\n      }\n    }\n\n    return null;\n  };\n}\n\nexport default createValidator;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}