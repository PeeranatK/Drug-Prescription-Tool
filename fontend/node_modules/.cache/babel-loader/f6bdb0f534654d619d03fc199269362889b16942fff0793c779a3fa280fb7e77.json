{"ast":null,"code":"import { MixedType } from './MixedType';\nexport class StringType extends MixedType {\n  constructor(errorMessage) {\n    super('string');\n    super.pushRule({\n      onValid: v => typeof v === 'string',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n  containsLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLetter;\n    super.pushRule({\n      onValid: v => /[a-zA-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsUppercaseLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsUppercaseLetter;\n    super.pushRule({\n      onValid: v => /[A-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsLowercaseLetter() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLowercaseLetter;\n    super.pushRule({\n      onValid: v => /[a-z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsLetterOnly() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsLetterOnly;\n    super.pushRule({\n      onValid: v => /^[a-zA-Z]+$/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  containsNumber() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.containsNumber;\n    super.pushRule({\n      onValid: v => /[0-9]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  isOneOf(values) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.isOneOf;\n    super.pushRule({\n      onValid: v => !!~values.indexOf(v),\n      errorMessage,\n      params: {\n        values\n      }\n    });\n    return this;\n  }\n  isEmail() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isEmail;\n    // http://emailregex.com/\n    const regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  isURL() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isURL;\n    const regexp = new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'i');\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  isHex() {\n    let errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.locale.isHex;\n    const regexp = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  pattern(regexp) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.pattern;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage,\n      params: {\n        regexp\n      }\n    });\n    return this;\n  }\n  rangeLength(minLength, maxLength) {\n    let errorMessage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale.rangeLength;\n    super.pushRule({\n      onValid: value => value.length >= minLength && value.length <= maxLength,\n      errorMessage,\n      params: {\n        minLength,\n        maxLength\n      }\n    });\n    return this;\n  }\n  minLength(minLength) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.minLength;\n    super.pushRule({\n      onValid: value => Array.from(value).length >= minLength,\n      errorMessage,\n      params: {\n        minLength\n      }\n    });\n    return this;\n  }\n  maxLength(maxLength) {\n    let errorMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.locale.maxLength;\n    super.pushRule({\n      onValid: value => Array.from(value).length <= maxLength,\n      errorMessage,\n      params: {\n        maxLength\n      }\n    });\n    return this;\n  }\n}\nexport default function getStringType(errorMessage) {\n  return new StringType(errorMessage);\n}","map":{"version":3,"mappings":"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","names":["MixedType","StringType","constructor","errorMessage","pushRule","onValid","v","locale","type","containsLetter","test","containsUppercaseLetter","containsLowercaseLetter","containsLetterOnly","containsNumber","isOneOf","values","indexOf","params","isEmail","regexp","isURL","RegExp","isHex","pattern","rangeLength","minLength","maxLength","value","length","Array","from","getStringType"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/schema-typed/src/StringType.ts"],"sourcesContent":["import { MixedType } from './MixedType';\nimport { ErrorMessageType } from './types';\nimport { StringTypeLocale } from './locales';\n\nexport class StringType<DataType = any, E = ErrorMessageType> extends MixedType<\n  string,\n  DataType,\n  E,\n  StringTypeLocale\n> {\n  constructor(errorMessage?: E | string) {\n    super('string');\n    super.pushRule({\n      onValid: v => typeof v === 'string',\n      errorMessage: errorMessage || this.locale.type\n    });\n  }\n\n  containsLetter(errorMessage: E | string = this.locale.containsLetter) {\n    super.pushRule({\n      onValid: v => /[a-zA-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsUppercaseLetter(errorMessage: E | string = this.locale.containsUppercaseLetter) {\n    super.pushRule({\n      onValid: v => /[A-Z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsLowercaseLetter(errorMessage: E | string = this.locale.containsLowercaseLetter) {\n    super.pushRule({\n      onValid: v => /[a-z]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsLetterOnly(errorMessage: E | string = this.locale.containsLetterOnly) {\n    super.pushRule({\n      onValid: v => /^[a-zA-Z]+$/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  containsNumber(errorMessage: E | string = this.locale.containsNumber) {\n    super.pushRule({\n      onValid: v => /[0-9]/.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  isOneOf(values: string[], errorMessage: E | string = this.locale.isOneOf) {\n    super.pushRule({\n      onValid: v => !!~values.indexOf(v),\n      errorMessage,\n      params: { values }\n    });\n    return this;\n  }\n\n  isEmail(errorMessage: E | string = this.locale.isEmail) {\n    // http://emailregex.com/\n    const regexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n\n  isURL(errorMessage: E | string = this.locale.isURL) {\n    const regexp = new RegExp(\n      '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n      'i'\n    );\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  isHex(errorMessage: E | string = this.locale.isHex) {\n    const regexp = /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i;\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage\n    });\n    return this;\n  }\n  pattern(regexp: RegExp, errorMessage: E | string = this.locale.pattern) {\n    super.pushRule({\n      onValid: v => regexp.test(v),\n      errorMessage,\n      params: { regexp }\n    });\n    return this;\n  }\n\n  rangeLength(\n    minLength: number,\n    maxLength: number,\n    errorMessage: E | string = this.locale.rangeLength\n  ) {\n    super.pushRule({\n      onValid: value => value.length >= minLength && value.length <= maxLength,\n      errorMessage,\n      params: { minLength, maxLength }\n    });\n    return this;\n  }\n\n  minLength(minLength: number, errorMessage: E | string = this.locale.minLength) {\n    super.pushRule({\n      onValid: value => Array.from(value).length >= minLength,\n      errorMessage,\n      params: { minLength }\n    });\n    return this;\n  }\n\n  maxLength(maxLength: number, errorMessage: E | string = this.locale.maxLength) {\n    super.pushRule({\n      onValid: value => Array.from(value).length <= maxLength,\n      errorMessage,\n      params: { maxLength }\n    });\n    return this;\n  }\n}\n\nexport default function getStringType<DataType = any, E = string>(errorMessage?: E) {\n  return new StringType<DataType, E>(errorMessage);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}