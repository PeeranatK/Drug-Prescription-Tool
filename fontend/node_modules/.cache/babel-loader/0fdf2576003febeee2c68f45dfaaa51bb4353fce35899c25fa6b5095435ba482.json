{"ast":null,"code":"import requestAnimationFramePolyfill from 'dom-lib/requestAnimationFramePolyfill';\nimport cancelAnimationFramePolyfill from 'dom-lib/cancelAnimationFramePolyfill';\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return cancelAnimationFramePolyfill(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n  var frame = {};\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call(null);\n    } else {\n      frame.id = requestAnimationFramePolyfill(timeout);\n    }\n  };\n  frame = {\n    id: requestAnimationFramePolyfill(timeout)\n  };\n  return frame;\n};","map":{"version":3,"names":["requestAnimationFramePolyfill","cancelAnimationFramePolyfill","cancelAnimationTimeout","frame","id","requestAnimationTimeout","callback","delay","start","Promise","resolve","then","Date","now","timeout","call"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/rsuite-table/es/utils/requestAnimationTimeout.js"],"sourcesContent":["import requestAnimationFramePolyfill from 'dom-lib/requestAnimationFramePolyfill';\nimport cancelAnimationFramePolyfill from 'dom-lib/cancelAnimationFramePolyfill';\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return cancelAnimationFramePolyfill(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n  var frame = {};\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call(null);\n    } else {\n      frame.id = requestAnimationFramePolyfill(timeout);\n    }\n  };\n\n  frame = {\n    id: requestAnimationFramePolyfill(timeout)\n  };\n  return frame;\n};"],"mappings":"AAAA,OAAOA,6BAA6B,MAAM,uCAAuC;AACjF,OAAOC,4BAA4B,MAAM,sCAAsC;AAC/E,OAAO,IAAIC,sBAAsB,GAAG,SAASA,sBAAsB,CAACC,KAAK,EAAE;EACzE,OAAOF,4BAA4B,CAACE,KAAK,CAACC,EAAE,CAAC;AAC/C,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAIC,uBAAuB,GAAG,SAASA,uBAAuB,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACrF,IAAIC,KAAK,CAAC,CAAC;;EAEXC,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,YAAY;IACjCH,KAAK,GAAGI,IAAI,CAACC,GAAG,EAAE;EACpB,CAAC,CAAC;EACF,IAAIV,KAAK,GAAG,CAAC,CAAC;EAEd,IAAIW,OAAO,GAAG,SAASA,OAAO,GAAG;IAC/B,IAAIF,IAAI,CAACC,GAAG,EAAE,GAAGL,KAAK,IAAID,KAAK,EAAE;MAC/BD,QAAQ,CAACS,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLZ,KAAK,CAACC,EAAE,GAAGJ,6BAA6B,CAACc,OAAO,CAAC;IACnD;EACF,CAAC;EAEDX,KAAK,GAAG;IACNC,EAAE,EAAEJ,6BAA6B,CAACc,OAAO;EAC3C,CAAC;EACD,OAAOX,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}