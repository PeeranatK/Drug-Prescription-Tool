{"ast":null,"code":"import _get from \"lodash/get\";\nimport { flattenTree } from '../utils/treeUtils';\nvar hasSymbol = typeof Symbol === 'function';\nexport var KEY_GROUP = hasSymbol ? Symbol('_$grouped') : '_$grouped';\nexport var KEY_GROUP_TITLE = 'groupTitle';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    // this will allow getting data using dot notation\n    // i.e groupBy=\"country.name\" as country will be a nested object\n    // to the item and the name will be nested key to the country object\n    // can be used with values in arrays, i.e groupBy=\"addresses.0.country.name\"\n    var groupByValue = _get(item, key, '');\n    if (!tempData[groupByValue]) {\n      tempData[groupByValue] = [];\n    }\n    tempData[groupByValue].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var _ref2;\n    var groupTitle = _ref[0],\n      children = _ref[1];\n    return _ref2 = {\n      children: isSort ? children.sort(sort(false)) : children\n    }, _ref2[KEY_GROUP_TITLE] = groupTitle, _ref2[KEY_GROUP] = true, _ref2;\n  });\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n  return flattenTree(nextData);\n}","map":{"version":3,"names":["_get","flattenTree","hasSymbol","Symbol","KEY_GROUP","KEY_GROUP_TITLE","getDataGroupBy","data","key","sort","tempData","isSort","forEach","item","groupByValue","push","nextData","Object","entries","map","_ref","_ref2","groupTitle","children"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/rsuite/esm/utils/getDataGroupBy.js"],"sourcesContent":["import _get from \"lodash/get\";\nimport { flattenTree } from '../utils/treeUtils';\nvar hasSymbol = typeof Symbol === 'function';\nexport var KEY_GROUP = hasSymbol ? Symbol('_$grouped') : '_$grouped';\nexport var KEY_GROUP_TITLE = 'groupTitle';\nexport default function getDataGroupBy(data, key, sort) {\n  if (data === void 0) {\n    data = [];\n  }\n\n  var tempData = {};\n  var isSort = typeof sort === 'function';\n  data.forEach(function (item) {\n    // this will allow getting data using dot notation\n    // i.e groupBy=\"country.name\" as country will be a nested object\n    // to the item and the name will be nested key to the country object\n    // can be used with values in arrays, i.e groupBy=\"addresses.0.country.name\"\n    var groupByValue = _get(item, key, '');\n\n    if (!tempData[groupByValue]) {\n      tempData[groupByValue] = [];\n    }\n\n    tempData[groupByValue].push(item);\n  });\n  var nextData = Object.entries(tempData).map(function (_ref) {\n    var _ref2;\n\n    var groupTitle = _ref[0],\n        children = _ref[1];\n    return _ref2 = {\n      children: isSort ? children.sort(sort(false)) : children\n    }, _ref2[KEY_GROUP_TITLE] = groupTitle, _ref2[KEY_GROUP] = true, _ref2;\n  });\n\n  if (isSort) {\n    nextData = nextData.sort(sort(true));\n  }\n\n  return flattenTree(nextData);\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,SAASC,WAAW,QAAQ,oBAAoB;AAChD,IAAIC,SAAS,GAAG,OAAOC,MAAM,KAAK,UAAU;AAC5C,OAAO,IAAIC,SAAS,GAAGF,SAAS,GAAGC,MAAM,CAAC,WAAW,CAAC,GAAG,WAAW;AACpE,OAAO,IAAIE,eAAe,GAAG,YAAY;AACzC,eAAe,SAASC,cAAc,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACtD,IAAIF,IAAI,KAAK,KAAK,CAAC,EAAE;IACnBA,IAAI,GAAG,EAAE;EACX;EAEA,IAAIG,QAAQ,GAAG,CAAC,CAAC;EACjB,IAAIC,MAAM,GAAG,OAAOF,IAAI,KAAK,UAAU;EACvCF,IAAI,CAACK,OAAO,CAAC,UAAUC,IAAI,EAAE;IAC3B;IACA;IACA;IACA;IACA,IAAIC,YAAY,GAAGd,IAAI,CAACa,IAAI,EAAEL,GAAG,EAAE,EAAE,CAAC;IAEtC,IAAI,CAACE,QAAQ,CAACI,YAAY,CAAC,EAAE;MAC3BJ,QAAQ,CAACI,YAAY,CAAC,GAAG,EAAE;IAC7B;IAEAJ,QAAQ,CAACI,YAAY,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC;EACnC,CAAC,CAAC;EACF,IAAIG,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAACR,QAAQ,CAAC,CAACS,GAAG,CAAC,UAAUC,IAAI,EAAE;IAC1D,IAAIC,KAAK;IAET,IAAIC,UAAU,GAAGF,IAAI,CAAC,CAAC,CAAC;MACpBG,QAAQ,GAAGH,IAAI,CAAC,CAAC,CAAC;IACtB,OAAOC,KAAK,GAAG;MACbE,QAAQ,EAAEZ,MAAM,GAAGY,QAAQ,CAACd,IAAI,CAACA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAGc;IAClD,CAAC,EAAEF,KAAK,CAAChB,eAAe,CAAC,GAAGiB,UAAU,EAAED,KAAK,CAACjB,SAAS,CAAC,GAAG,IAAI,EAAEiB,KAAK;EACxE,CAAC,CAAC;EAEF,IAAIV,MAAM,EAAE;IACVK,QAAQ,GAAGA,QAAQ,CAACP,IAAI,CAACA,IAAI,CAAC,IAAI,CAAC,CAAC;EACtC;EAEA,OAAOR,WAAW,CAACe,QAAQ,CAAC;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}