{"ast":null,"code":"import { useCallback, useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isNil from 'lodash/isNil';\nimport useUniqueId from '../utils/useUniqueId';\nimport MenuContext, { MenuActionTypes, MoveFocusTo } from './MenuContext';\n\n/**\n * Headless ARIA `menuitem`\n * @private\n */\nfunction MenuItem(props) {\n  var _menuState$items$menu;\n  var children = props.children,\n    _props$selected = props.selected,\n    selected = _props$selected === void 0 ? false : _props$selected,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    onActivate = props.onActivate;\n  var menuitemRef = useRef(null);\n  var menuitemId = useUniqueId('menuitem-');\n  var menu = useContext(MenuContext);\n  if (!menu) {\n    throw new Error('<MenuItem> must be rendered within a <Menu>');\n  }\n  var menuState = menu[0],\n    dispatch = menu[1]; // Whether this menuitem has focus (indicated by `aria-activedescendant` from parent menu)\n\n  var hasFocus = !isNil(menuitemRef.current) && !isNil(menuState.activeItemIndex) && ((_menuState$items$menu = menuState.items[menuState.activeItemIndex]) === null || _menuState$items$menu === void 0 ? void 0 : _menuState$items$menu.element) === menuitemRef.current;\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n    onActivate === null || onActivate === void 0 ? void 0 : onActivate(event);\n  }, [disabled, onActivate]); // Gain/release focus on mousedown in `menubar`\n\n  var handleMouseDown = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [dispatch, hasFocus]); // Gain/release focus on mouseenter/mouseleave in `menu`\n\n  var handleMouseMove = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [hasFocus, dispatch]);\n  var handleMouseLeave = useCallback(function () {\n    dispatch({\n      type: MenuActionTypes.MoveFocus,\n      to: MoveFocusTo.None\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    var menuitemElement = menuitemRef.current;\n    if (menuitemElement) {\n      dispatch({\n        type: MenuActionTypes.RegisterItem,\n        element: menuitemElement,\n        props: {\n          disabled: disabled\n        }\n      });\n      return function () {\n        dispatch({\n          type: MenuActionTypes.UnregisterItem,\n          id: menuitemElement.id\n        });\n      };\n    }\n  }, [menuitemRef, disabled, dispatch]);\n  var menuitemProps = {\n    id: menuitemId,\n    role: 'menuitem',\n    // fixme Only use `aria-checked` on menuitemradio and menuitemcheckbox\n    'aria-checked': selected || undefined,\n    'aria-disabled': disabled,\n    tabIndex: -1,\n    onClick: handleClick,\n    // render props\n    selected: selected,\n    active: hasFocus\n  }; // Only move focus on hover in a `menu`, not `menubar`\n\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menu') {\n    menuitemProps.onMouseMove = handleMouseMove;\n    menuitemProps.onMouseLeave = handleMouseLeave;\n  }\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menubar') {\n    menuitemProps.onMouseDown = handleMouseDown;\n    menuitemProps.onMouseOver = handleMouseMove;\n    menuitemProps.onMouseLeave = handleMouseLeave;\n  }\n  return children(menuitemProps, menuitemRef);\n}\nMenuItem.displayName = 'MenuItem';\nMenuItem.propTypes = {\n  selected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n  onActivate: PropTypes.func\n};\nexport default MenuItem;","map":{"version":3,"names":["useCallback","useContext","useEffect","useRef","PropTypes","isNil","useUniqueId","MenuContext","MenuActionTypes","MoveFocusTo","MenuItem","props","_menuState$items$menu","children","_props$selected","selected","_props$disabled","disabled","onActivate","menuitemRef","menuitemId","menu","Error","menuState","dispatch","hasFocus","current","activeItemIndex","items","element","handleClick","event","handleMouseDown","type","MoveFocus","to","Specific","id","handleMouseMove","handleMouseLeave","None","menuitemElement","RegisterItem","UnregisterItem","menuitemProps","role","undefined","tabIndex","onClick","active","onMouseMove","onMouseLeave","onMouseDown","onMouseOver","displayName","propTypes","bool","func","isRequired"],"sources":["/Users/peeranat/Desktop/Project/fontend/node_modules/rsuite/esm/Menu/MenuItem.js"],"sourcesContent":["import { useCallback, useContext, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isNil from 'lodash/isNil';\nimport useUniqueId from '../utils/useUniqueId';\nimport MenuContext, { MenuActionTypes, MoveFocusTo } from './MenuContext';\n\n/**\n * Headless ARIA `menuitem`\n * @private\n */\nfunction MenuItem(props) {\n  var _menuState$items$menu;\n\n  var children = props.children,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      onActivate = props.onActivate;\n  var menuitemRef = useRef(null);\n  var menuitemId = useUniqueId('menuitem-');\n  var menu = useContext(MenuContext);\n\n  if (!menu) {\n    throw new Error('<MenuItem> must be rendered within a <Menu>');\n  }\n\n  var menuState = menu[0],\n      dispatch = menu[1]; // Whether this menuitem has focus (indicated by `aria-activedescendant` from parent menu)\n\n  var hasFocus = !isNil(menuitemRef.current) && !isNil(menuState.activeItemIndex) && ((_menuState$items$menu = menuState.items[menuState.activeItemIndex]) === null || _menuState$items$menu === void 0 ? void 0 : _menuState$items$menu.element) === menuitemRef.current;\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n\n    onActivate === null || onActivate === void 0 ? void 0 : onActivate(event);\n  }, [disabled, onActivate]); // Gain/release focus on mousedown in `menubar`\n\n  var handleMouseDown = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [dispatch, hasFocus]); // Gain/release focus on mouseenter/mouseleave in `menu`\n\n  var handleMouseMove = useCallback(function () {\n    if (!isNil(menuitemRef.current) && !hasFocus) {\n      dispatch({\n        type: MenuActionTypes.MoveFocus,\n        to: MoveFocusTo.Specific,\n        id: menuitemRef.current.id\n      });\n    }\n  }, [hasFocus, dispatch]);\n  var handleMouseLeave = useCallback(function () {\n    dispatch({\n      type: MenuActionTypes.MoveFocus,\n      to: MoveFocusTo.None\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    var menuitemElement = menuitemRef.current;\n\n    if (menuitemElement) {\n      dispatch({\n        type: MenuActionTypes.RegisterItem,\n        element: menuitemElement,\n        props: {\n          disabled: disabled\n        }\n      });\n      return function () {\n        dispatch({\n          type: MenuActionTypes.UnregisterItem,\n          id: menuitemElement.id\n        });\n      };\n    }\n  }, [menuitemRef, disabled, dispatch]);\n  var menuitemProps = {\n    id: menuitemId,\n    role: 'menuitem',\n    // fixme Only use `aria-checked` on menuitemradio and menuitemcheckbox\n    'aria-checked': selected || undefined,\n    'aria-disabled': disabled,\n    tabIndex: -1,\n    onClick: handleClick,\n    // render props\n    selected: selected,\n    active: hasFocus\n  }; // Only move focus on hover in a `menu`, not `menubar`\n\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menu') {\n    menuitemProps.onMouseMove = handleMouseMove;\n    menuitemProps.onMouseLeave = handleMouseLeave;\n  }\n\n  if ((menuState === null || menuState === void 0 ? void 0 : menuState.role) === 'menubar') {\n    menuitemProps.onMouseDown = handleMouseDown;\n    menuitemProps.onMouseOver = handleMouseMove;\n    menuitemProps.onMouseLeave = handleMouseLeave;\n  }\n\n  return children(menuitemProps, menuitemRef);\n}\n\nMenuItem.displayName = 'MenuItem';\nMenuItem.propTypes = {\n  selected: PropTypes.bool,\n  disabled: PropTypes.bool,\n  children: PropTypes.func.isRequired,\n  onActivate: PropTypes.func\n};\nexport default MenuItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}