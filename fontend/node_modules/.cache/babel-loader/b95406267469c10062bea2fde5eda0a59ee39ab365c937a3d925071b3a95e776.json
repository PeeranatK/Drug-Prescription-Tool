{"ast":null,"code":"var _jsxFileName = \"/Users/peeranat/Desktop/Project/fontend/src/Page/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Avatar from '@mui/material/Avatar';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    UsersGet();\n  }, []);\n  const UsersGet = () => {\n    fetch(\"https://www.mecallapi.com/api/users\").then(res => res.json()).then(result => {\n      setUsers(result);\n    });\n  };\n  const UpdateUser = id => {\n    window.location = '/update/' + id;\n  };\n  const UserDelete = id => {\n    var data = {\n      'id': id\n    };\n    fetch('https://www.mecallapi.com/api/users/delete', {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/form-data',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(result => {\n      alert(result['message']);\n      if (result['status'] === 'ok') {\n        UsersGet();\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      p: 2\n    },\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flexGrow: 1,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h2\",\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: \"USERS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              children: \"CREATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"First\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Last\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: user.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: user.avatar\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.fname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.lname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  color: \"primary\",\n                  \"aria-label\": \"outlined primary button group\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => UpdateUser(user.id),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => UserDelete(user.id),\n                    children: \"Del\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, user.ID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Typography","Button","Container","Paper","Box","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Avatar","ButtonGroup","Link","Dashboard","users","setUsers","UsersGet","fetch","then","res","json","result","UpdateUser","id","window","location","UserDelete","data","method","headers","Accept","body","JSON","stringify","alert","p","map","user","avatar","fname","lname","username","ID"],"sources":["/Users/peeranat/Desktop/Project/fontend/src/Page/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Avatar from '@mui/material/Avatar';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport { Link } from \"react-router-dom\";\n\nexport default function Dashboard() {\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    UsersGet()\n  }, [])\n  \n  const UsersGet = () => {\n    fetch(\"https://www.mecallapi.com/api/users\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setUsers(result)\n        }\n      )\n  }\n\n  const UpdateUser = id => {\n    window.location = '/update/'+id\n  }\n\n  const UserDelete = id => {\n    var data = {\n      'id': id\n    }\n    fetch('https://www.mecallapi.com/api/users/delete', {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/form-data',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    .then(res => res.json())\n    .then(\n      (result) => {\n        alert(result['message'])\n        if (result['status'] === 'ok') {\n          UsersGet();\n        }\n      }\n    )\n  }\n\n  return (\n    <Container sx={{ p:2 }} maxWidth=\"lg\">    \n      <Paper sx={{ p:2 }}>\n        <Box display=\"flex\">\n          <Box flexGrow={1}>\n            <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n              USERS\n            </Typography>\n          </Box>\n          <Box>\n            <Link to=\"/create\">\n              <Button variant=\"contained\" color=\"primary\">\n                CREATE\n              </Button>\n            </Link>\n          </Box>\n        </Box>\n        <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"right\">ID</TableCell>\n              <TableCell align=\"center\">Avatar</TableCell>\n              <TableCell align=\"left\">First</TableCell>\n              <TableCell align=\"left\">Last</TableCell>\n              <TableCell align=\"left\">Username</TableCell>\n              <TableCell align=\"center\">Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map((user) => (\n              <TableRow key={user.ID}>\n                <TableCell align=\"right\">{user.id}</TableCell>\n                <TableCell align=\"center\">\n                  <Box display=\"flex\" justifyContent=\"center\">\n                    <Avatar src={user.avatar} />\n                  </Box>\n                </TableCell>\n                <TableCell align=\"left\">{user.fname}</TableCell>\n                <TableCell align=\"left\">{user.lname}</TableCell>\n                <TableCell align=\"left\">{user.username}</TableCell>\n                <TableCell align=\"center\">\n                  <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n                    <Button onClick={() => UpdateUser(user.id)}>Edit</Button>\n                    <Button onClick={() => UserDelete(user.id)}>Del</Button>\n                  </ButtonGroup>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      </Paper>\n    </Container>\n    \n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}