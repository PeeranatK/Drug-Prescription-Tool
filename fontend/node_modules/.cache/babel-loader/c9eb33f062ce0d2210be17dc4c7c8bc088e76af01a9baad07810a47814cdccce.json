{"ast":null,"code":"import { useRef, useCallback } from 'react';\nimport getWidth from 'dom-lib/getWidth';\nimport getHeight from 'dom-lib/getHeight';\nimport getOffset from 'dom-lib/getOffset';\nimport { SCROLLBAR_WIDTH } from '../constants';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport useMount from './useMount';\nimport useUpdateLayoutEffect from './useUpdateLayoutEffect';\nimport isNumberOrTrue from './isNumberOrTrue';\nimport debounce from 'lodash/debounce';\n\n/**\n * The dimension information of the table,\n * including the height, width, scrollable distance and the coordinates of the scroll handle, etc.\n * @param props\n * @returns\n */\nvar useTableDimension = function useTableDimension(props) {\n  var data = props.data,\n    rowHeight = props.rowHeight,\n    tableRef = props.tableRef,\n    headerWrapperRef = props.headerWrapperRef,\n    prefix = props.prefix,\n    widthProp = props.width,\n    affixHeader = props.affixHeader,\n    affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n    headerHeight = props.headerHeight,\n    heightProp = props.height,\n    autoHeight = props.autoHeight,\n    minHeight = props.minHeight,\n    fillHeight = props.fillHeight,\n    children = props.children,\n    expandedRowKeys = props.expandedRowKeys,\n    showHeader = props.showHeader,\n    bordered = props.bordered,\n    onTableResizeChange = props.onTableResizeChange,\n    onTableScroll = props.onTableScroll;\n  var contentHeight = useRef(0);\n  var contentWidth = useRef(0);\n  var minScrollY = useRef(0);\n  var scrollY = useRef(0);\n  var scrollX = useRef(0);\n  var minScrollX = useRef(0);\n  var tableWidth = useRef(widthProp || 0);\n  var tableHeight = useRef(heightProp || 0);\n  var columnCount = useRef(0);\n  var resizeObserver = useRef();\n  var containerResizeObserver = useRef();\n  var headerOffset = useRef(null);\n  var tableOffset = useRef(null);\n  var getRowHeight = useCallback(function (rowData) {\n    return typeof rowHeight === 'function' ? rowHeight(rowData) : rowHeight;\n  }, [rowHeight]);\n  var calculateTableContextHeight = useCallback(function () {\n    var _table$querySelectorA;\n    var prevContentHeight = contentHeight.current;\n    var table = tableRef === null || tableRef === void 0 ? void 0 : tableRef.current;\n    var rows = (table === null || table === void 0 ? void 0 : table.querySelectorAll(\".\" + (prefix === null || prefix === void 0 ? void 0 : prefix('row')))) || [];\n    var virtualized = (table === null || table === void 0 ? void 0 : (_table$querySelectorA = table.querySelectorAll('.virtualized')) === null || _table$querySelectorA === void 0 ? void 0 : _table$querySelectorA.length) > 0;\n    var nextContentHeight = rows.length ? Array.from(rows).map(function (row, index) {\n      return getHeight(row) || getRowHeight(data === null || data === void 0 ? void 0 : data[index]);\n    }).reduce(function (x, y) {\n      return x + y;\n    }) : 0; // After setting the affixHeader property, the height of the two headers should be subtracted.\n\n    contentHeight.current = Math.round(nextContentHeight - (affixHeader ? headerHeight * 2 : headerHeight)); // Whether to show the horizontal scroll bar\n\n    var hasHorizontalScrollbar = contentWidth.current > tableWidth.current; // The height of the table content area should be added to the height occupied by the horizontal scroll bar when autoHeight is set.\n\n    if (autoHeight && hasHorizontalScrollbar) {\n      contentHeight.current += SCROLLBAR_WIDTH;\n    }\n    var height = fillHeight ? tableHeight.current : heightProp;\n    var tableBodyHeight = showHeader ? height - headerHeight : height;\n    if (!autoHeight) {\n      /**\n       *  The purpose of subtracting SCROLLBAR_WIDTH is to keep the scroll bar from blocking the content part.\n       *  But it will only be calculated when there is a horizontal scroll bar (contentWidth > tableWidth).\n       */\n      minScrollY.current = -(nextContentHeight - height) - (hasHorizontalScrollbar ? SCROLLBAR_WIDTH : 0);\n    } // If the height of the content area is less than the height of the table, the vertical scroll bar is reset.\n\n    if (nextContentHeight < height) {\n      onTableScroll === null || onTableScroll === void 0 ? void 0 : onTableScroll({\n        y: 0\n      });\n    }\n    var currentScrollTop = Math.abs(scrollY.current); // When Table is set to virtualized, the logic will be entered every time the wheel event is\n    // triggered to avoid resetting the scroll bar after scrolling to the bottom, so add the SCROLLBAR_WIDTH value.\n\n    var maxScrollTop = nextContentHeight + SCROLLBAR_WIDTH - tableBodyHeight; // If the top value of the current scroll is greater than the scrollable range,\n    // keep the vertical scroll bar at the bottom.\n\n    if (maxScrollTop > 0 && currentScrollTop > maxScrollTop) {\n      if (virtualized) {\n        onTableScroll === null || onTableScroll === void 0 ? void 0 : onTableScroll({\n          y: ((data === null || data === void 0 ? void 0 : data.length) || 0) * getRowHeight() - tableBodyHeight\n        });\n      } else {\n        onTableScroll === null || onTableScroll === void 0 ? void 0 : onTableScroll({\n          y: maxScrollTop\n        });\n      }\n    }\n    if (prevContentHeight !== contentHeight.current) {\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevContentHeight, 'bodyHeightChanged');\n    }\n  }, [tableRef, prefix, affixHeader, headerHeight, autoHeight, fillHeight, heightProp, showHeader, getRowHeight, data, onTableScroll, onTableResizeChange]);\n  var setOffsetByAffix = useCallback(function () {\n    var headerNode = headerWrapperRef === null || headerWrapperRef === void 0 ? void 0 : headerWrapperRef.current;\n    if (isNumberOrTrue(affixHeader) && headerNode) {\n      headerOffset.current = getOffset(headerNode);\n    }\n    if (isNumberOrTrue(affixHorizontalScrollbar) && tableRef !== null && tableRef !== void 0 && tableRef.current) {\n      tableOffset.current = getOffset(tableRef === null || tableRef === void 0 ? void 0 : tableRef.current);\n    }\n  }, [affixHeader, affixHorizontalScrollbar, headerWrapperRef, tableRef]);\n  var calculateTableContentWidth = useCallback(function () {\n    var prevWidth = contentWidth.current;\n    var prevColumnCount = columnCount.current;\n    var table = tableRef === null || tableRef === void 0 ? void 0 : tableRef.current;\n    var row = table === null || table === void 0 ? void 0 : table.querySelector(\".\" + prefix('row') + \":not(.virtualized)\");\n    var nextContentWidth = row ? getWidth(row) : 0;\n    contentWidth.current = nextContentWidth - (autoHeight ? SCROLLBAR_WIDTH : 0);\n    columnCount.current = (row === null || row === void 0 ? void 0 : row.querySelectorAll(\".\" + prefix('cell')).length) || 0; // The value of SCROLLBAR_WIDTH is subtracted so that the scroll bar does not block the content part.\n    // There is no vertical scroll bar after autoHeight.\n\n    var minScrollWidth = -(nextContentWidth - tableWidth.current) - (autoHeight ? 0 : SCROLLBAR_WIDTH);\n    if (minScrollX.current !== minScrollWidth) {\n      minScrollX.current = minScrollWidth;\n      if (scrollX.current < minScrollWidth) {\n        // fix: 405#issuecomment-1464831646\n        scrollX.current = minScrollWidth;\n      }\n    }\n    /**\n     * If the width of the content area and the number of columns change,\n     * the horizontal scroll bar is reset.\n     * fix: https://github.com/rsuite/rsuite/issues/2039\n     */\n\n    if (prevWidth > 0 && prevWidth !== contentWidth.current || prevColumnCount > 0 && prevColumnCount !== columnCount.current) {\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevWidth, 'bodyWidthChanged');\n    }\n  }, [autoHeight, onTableResizeChange, prefix, tableRef]);\n  var calculateTableWidth = useCallback(function (nextWidth) {\n    var prevWidth = tableWidth.current;\n    if (tableRef !== null && tableRef !== void 0 && tableRef.current) {\n      tableWidth.current = nextWidth || getWidth(tableRef === null || tableRef === void 0 ? void 0 : tableRef.current);\n    }\n    if (prevWidth && prevWidth !== tableWidth.current) {\n      scrollX.current = 0;\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevWidth, 'widthChanged');\n    }\n    setOffsetByAffix();\n  }, [onTableResizeChange, setOffsetByAffix, tableRef]);\n  var calculateTableHeight = useCallback(function (nextHeight) {\n    var prevHeight = tableHeight.current;\n    if (nextHeight) {\n      tableHeight.current = nextHeight;\n    } else if (tableRef !== null && tableRef !== void 0 && tableRef.current) {\n      tableHeight.current = getHeight(tableRef.current.parentNode);\n    }\n    if (prevHeight && prevHeight !== tableHeight.current) {\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevHeight, 'heightChanged');\n    }\n  }, [onTableResizeChange, tableRef]);\n  useMount(function () {\n    var _tableRef$current;\n    calculateTableContextHeight();\n    calculateTableContentWidth();\n    calculateTableWidth();\n    calculateTableHeight();\n    setOffsetByAffix();\n    containerResizeObserver.current = new ResizeObserver(function (entries) {\n      calculateTableHeight(entries[0].contentRect.height);\n    });\n    containerResizeObserver.current.observe(tableRef === null || tableRef === void 0 ? void 0 : (_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.parentNode);\n    var changeTableWidthWhenResize = debounce(function (entries) {\n      var width = entries[0].contentRect.width; // bordered table width is 1px larger than the container width. fix: #405 #404\n\n      var widthWithBorder = width + 2;\n      calculateTableWidth(bordered ? widthWithBorder : width);\n    }, 20);\n    resizeObserver.current = new ResizeObserver(changeTableWidthWhenResize);\n    resizeObserver.current.observe(tableRef === null || tableRef === void 0 ? void 0 : tableRef.current);\n    return function () {\n      var _resizeObserver$curre, _containerResizeObser;\n      (_resizeObserver$curre = resizeObserver.current) === null || _resizeObserver$curre === void 0 ? void 0 : _resizeObserver$curre.disconnect();\n      (_containerResizeObser = containerResizeObserver.current) === null || _containerResizeObser === void 0 ? void 0 : _containerResizeObser.disconnect();\n    };\n  });\n  useUpdateLayoutEffect(function () {\n    calculateTableHeight();\n    calculateTableContextHeight();\n  }, [fillHeight]);\n  useUpdateLayoutEffect(function () {\n    calculateTableWidth();\n    calculateTableContentWidth();\n    calculateTableContextHeight();\n  }, [data, heightProp, contentHeight.current, expandedRowKeys, children, calculateTableContextHeight, calculateTableContentWidth]);\n  var setScrollY = useCallback(function (value) {\n    scrollY.current = value;\n  }, []);\n  var setScrollX = useCallback(function (value) {\n    scrollX.current = value;\n  }, []);\n  var getTableHeight = function getTableHeight() {\n    if (fillHeight) {\n      return tableHeight.current;\n    }\n    if ((data === null || data === void 0 ? void 0 : data.length) === 0 && autoHeight) {\n      return heightProp;\n    }\n    return autoHeight ? Math.max(headerHeight + contentHeight.current, minHeight) : heightProp;\n  };\n  return {\n    contentHeight: contentHeight,\n    contentWidth: contentWidth,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollY: scrollY,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerOffset: headerOffset,\n    tableOffset: tableOffset,\n    getTableHeight: getTableHeight,\n    setScrollY: setScrollY,\n    setScrollX: setScrollX\n  };\n};\nexport default useTableDimension;","map":{"version":3,"names":["useRef","useCallback","getWidth","getHeight","getOffset","SCROLLBAR_WIDTH","ResizeObserver","useMount","useUpdateLayoutEffect","isNumberOrTrue","debounce","useTableDimension","props","data","rowHeight","tableRef","headerWrapperRef","prefix","widthProp","width","affixHeader","affixHorizontalScrollbar","headerHeight","heightProp","height","autoHeight","minHeight","fillHeight","children","expandedRowKeys","showHeader","bordered","onTableResizeChange","onTableScroll","contentHeight","contentWidth","minScrollY","scrollY","scrollX","minScrollX","tableWidth","tableHeight","columnCount","resizeObserver","containerResizeObserver","headerOffset","tableOffset","getRowHeight","rowData","calculateTableContextHeight","_table$querySelectorA","prevContentHeight","current","table","rows","querySelectorAll","virtualized","length","nextContentHeight","Array","from","map","row","index","reduce","x","y","Math","round","hasHorizontalScrollbar","tableBodyHeight","currentScrollTop","abs","maxScrollTop","setOffsetByAffix","headerNode","calculateTableContentWidth","prevWidth","prevColumnCount","querySelector","nextContentWidth","minScrollWidth","calculateTableWidth","nextWidth","calculateTableHeight","nextHeight","prevHeight","parentNode","_tableRef$current","entries","contentRect","observe","changeTableWidthWhenResize","widthWithBorder","_resizeObserver$curre","_containerResizeObser","disconnect","setScrollY","value","setScrollX","getTableHeight","max"],"sources":["/Users/peeranat/Desktop/Project/fontend/node_modules/rsuite-table/es/utils/useTableDimension.js"],"sourcesContent":["import { useRef, useCallback } from 'react';\nimport getWidth from 'dom-lib/getWidth';\nimport getHeight from 'dom-lib/getHeight';\nimport getOffset from 'dom-lib/getOffset';\nimport { SCROLLBAR_WIDTH } from '../constants';\nimport { ResizeObserver } from '@juggle/resize-observer';\nimport useMount from './useMount';\nimport useUpdateLayoutEffect from './useUpdateLayoutEffect';\nimport isNumberOrTrue from './isNumberOrTrue';\nimport debounce from 'lodash/debounce';\n\n/**\n * The dimension information of the table,\n * including the height, width, scrollable distance and the coordinates of the scroll handle, etc.\n * @param props\n * @returns\n */\nvar useTableDimension = function useTableDimension(props) {\n  var data = props.data,\n      rowHeight = props.rowHeight,\n      tableRef = props.tableRef,\n      headerWrapperRef = props.headerWrapperRef,\n      prefix = props.prefix,\n      widthProp = props.width,\n      affixHeader = props.affixHeader,\n      affixHorizontalScrollbar = props.affixHorizontalScrollbar,\n      headerHeight = props.headerHeight,\n      heightProp = props.height,\n      autoHeight = props.autoHeight,\n      minHeight = props.minHeight,\n      fillHeight = props.fillHeight,\n      children = props.children,\n      expandedRowKeys = props.expandedRowKeys,\n      showHeader = props.showHeader,\n      bordered = props.bordered,\n      onTableResizeChange = props.onTableResizeChange,\n      onTableScroll = props.onTableScroll;\n  var contentHeight = useRef(0);\n  var contentWidth = useRef(0);\n  var minScrollY = useRef(0);\n  var scrollY = useRef(0);\n  var scrollX = useRef(0);\n  var minScrollX = useRef(0);\n  var tableWidth = useRef(widthProp || 0);\n  var tableHeight = useRef(heightProp || 0);\n  var columnCount = useRef(0);\n  var resizeObserver = useRef();\n  var containerResizeObserver = useRef();\n  var headerOffset = useRef(null);\n  var tableOffset = useRef(null);\n  var getRowHeight = useCallback(function (rowData) {\n    return typeof rowHeight === 'function' ? rowHeight(rowData) : rowHeight;\n  }, [rowHeight]);\n  var calculateTableContextHeight = useCallback(function () {\n    var _table$querySelectorA;\n\n    var prevContentHeight = contentHeight.current;\n    var table = tableRef === null || tableRef === void 0 ? void 0 : tableRef.current;\n    var rows = (table === null || table === void 0 ? void 0 : table.querySelectorAll(\".\" + (prefix === null || prefix === void 0 ? void 0 : prefix('row')))) || [];\n    var virtualized = (table === null || table === void 0 ? void 0 : (_table$querySelectorA = table.querySelectorAll('.virtualized')) === null || _table$querySelectorA === void 0 ? void 0 : _table$querySelectorA.length) > 0;\n    var nextContentHeight = rows.length ? Array.from(rows).map(function (row, index) {\n      return getHeight(row) || getRowHeight(data === null || data === void 0 ? void 0 : data[index]);\n    }).reduce(function (x, y) {\n      return x + y;\n    }) : 0; // After setting the affixHeader property, the height of the two headers should be subtracted.\n\n    contentHeight.current = Math.round(nextContentHeight - (affixHeader ? headerHeight * 2 : headerHeight)); // Whether to show the horizontal scroll bar\n\n    var hasHorizontalScrollbar = contentWidth.current > tableWidth.current; // The height of the table content area should be added to the height occupied by the horizontal scroll bar when autoHeight is set.\n\n    if (autoHeight && hasHorizontalScrollbar) {\n      contentHeight.current += SCROLLBAR_WIDTH;\n    }\n\n    var height = fillHeight ? tableHeight.current : heightProp;\n    var tableBodyHeight = showHeader ? height - headerHeight : height;\n\n    if (!autoHeight) {\n      /**\n       *  The purpose of subtracting SCROLLBAR_WIDTH is to keep the scroll bar from blocking the content part.\n       *  But it will only be calculated when there is a horizontal scroll bar (contentWidth > tableWidth).\n       */\n      minScrollY.current = -(nextContentHeight - height) - (hasHorizontalScrollbar ? SCROLLBAR_WIDTH : 0);\n    } // If the height of the content area is less than the height of the table, the vertical scroll bar is reset.\n\n\n    if (nextContentHeight < height) {\n      onTableScroll === null || onTableScroll === void 0 ? void 0 : onTableScroll({\n        y: 0\n      });\n    }\n\n    var currentScrollTop = Math.abs(scrollY.current); // When Table is set to virtualized, the logic will be entered every time the wheel event is\n    // triggered to avoid resetting the scroll bar after scrolling to the bottom, so add the SCROLLBAR_WIDTH value.\n\n    var maxScrollTop = nextContentHeight + SCROLLBAR_WIDTH - tableBodyHeight; // If the top value of the current scroll is greater than the scrollable range,\n    // keep the vertical scroll bar at the bottom.\n\n    if (maxScrollTop > 0 && currentScrollTop > maxScrollTop) {\n      if (virtualized) {\n        onTableScroll === null || onTableScroll === void 0 ? void 0 : onTableScroll({\n          y: ((data === null || data === void 0 ? void 0 : data.length) || 0) * getRowHeight() - tableBodyHeight\n        });\n      } else {\n        onTableScroll === null || onTableScroll === void 0 ? void 0 : onTableScroll({\n          y: maxScrollTop\n        });\n      }\n    }\n\n    if (prevContentHeight !== contentHeight.current) {\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevContentHeight, 'bodyHeightChanged');\n    }\n  }, [tableRef, prefix, affixHeader, headerHeight, autoHeight, fillHeight, heightProp, showHeader, getRowHeight, data, onTableScroll, onTableResizeChange]);\n  var setOffsetByAffix = useCallback(function () {\n    var headerNode = headerWrapperRef === null || headerWrapperRef === void 0 ? void 0 : headerWrapperRef.current;\n\n    if (isNumberOrTrue(affixHeader) && headerNode) {\n      headerOffset.current = getOffset(headerNode);\n    }\n\n    if (isNumberOrTrue(affixHorizontalScrollbar) && tableRef !== null && tableRef !== void 0 && tableRef.current) {\n      tableOffset.current = getOffset(tableRef === null || tableRef === void 0 ? void 0 : tableRef.current);\n    }\n  }, [affixHeader, affixHorizontalScrollbar, headerWrapperRef, tableRef]);\n  var calculateTableContentWidth = useCallback(function () {\n    var prevWidth = contentWidth.current;\n    var prevColumnCount = columnCount.current;\n    var table = tableRef === null || tableRef === void 0 ? void 0 : tableRef.current;\n    var row = table === null || table === void 0 ? void 0 : table.querySelector(\".\" + prefix('row') + \":not(.virtualized)\");\n    var nextContentWidth = row ? getWidth(row) : 0;\n    contentWidth.current = nextContentWidth - (autoHeight ? SCROLLBAR_WIDTH : 0);\n    columnCount.current = (row === null || row === void 0 ? void 0 : row.querySelectorAll(\".\" + prefix('cell')).length) || 0; // The value of SCROLLBAR_WIDTH is subtracted so that the scroll bar does not block the content part.\n    // There is no vertical scroll bar after autoHeight.\n\n    var minScrollWidth = -(nextContentWidth - tableWidth.current) - (autoHeight ? 0 : SCROLLBAR_WIDTH);\n\n    if (minScrollX.current !== minScrollWidth) {\n      minScrollX.current = minScrollWidth;\n\n      if (scrollX.current < minScrollWidth) {\n        // fix: 405#issuecomment-1464831646\n        scrollX.current = minScrollWidth;\n      }\n    }\n    /**\n     * If the width of the content area and the number of columns change,\n     * the horizontal scroll bar is reset.\n     * fix: https://github.com/rsuite/rsuite/issues/2039\n     */\n\n\n    if (prevWidth > 0 && prevWidth !== contentWidth.current || prevColumnCount > 0 && prevColumnCount !== columnCount.current) {\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevWidth, 'bodyWidthChanged');\n    }\n  }, [autoHeight, onTableResizeChange, prefix, tableRef]);\n  var calculateTableWidth = useCallback(function (nextWidth) {\n    var prevWidth = tableWidth.current;\n\n    if (tableRef !== null && tableRef !== void 0 && tableRef.current) {\n      tableWidth.current = nextWidth || getWidth(tableRef === null || tableRef === void 0 ? void 0 : tableRef.current);\n    }\n\n    if (prevWidth && prevWidth !== tableWidth.current) {\n      scrollX.current = 0;\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevWidth, 'widthChanged');\n    }\n\n    setOffsetByAffix();\n  }, [onTableResizeChange, setOffsetByAffix, tableRef]);\n  var calculateTableHeight = useCallback(function (nextHeight) {\n    var prevHeight = tableHeight.current;\n\n    if (nextHeight) {\n      tableHeight.current = nextHeight;\n    } else if (tableRef !== null && tableRef !== void 0 && tableRef.current) {\n      tableHeight.current = getHeight(tableRef.current.parentNode);\n    }\n\n    if (prevHeight && prevHeight !== tableHeight.current) {\n      onTableResizeChange === null || onTableResizeChange === void 0 ? void 0 : onTableResizeChange(prevHeight, 'heightChanged');\n    }\n  }, [onTableResizeChange, tableRef]);\n  useMount(function () {\n    var _tableRef$current;\n\n    calculateTableContextHeight();\n    calculateTableContentWidth();\n    calculateTableWidth();\n    calculateTableHeight();\n    setOffsetByAffix();\n    containerResizeObserver.current = new ResizeObserver(function (entries) {\n      calculateTableHeight(entries[0].contentRect.height);\n    });\n    containerResizeObserver.current.observe(tableRef === null || tableRef === void 0 ? void 0 : (_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.parentNode);\n    var changeTableWidthWhenResize = debounce(function (entries) {\n      var width = entries[0].contentRect.width; // bordered table width is 1px larger than the container width. fix: #405 #404\n\n      var widthWithBorder = width + 2;\n      calculateTableWidth(bordered ? widthWithBorder : width);\n    }, 20);\n    resizeObserver.current = new ResizeObserver(changeTableWidthWhenResize);\n    resizeObserver.current.observe(tableRef === null || tableRef === void 0 ? void 0 : tableRef.current);\n    return function () {\n      var _resizeObserver$curre, _containerResizeObser;\n\n      (_resizeObserver$curre = resizeObserver.current) === null || _resizeObserver$curre === void 0 ? void 0 : _resizeObserver$curre.disconnect();\n      (_containerResizeObser = containerResizeObserver.current) === null || _containerResizeObser === void 0 ? void 0 : _containerResizeObser.disconnect();\n    };\n  });\n  useUpdateLayoutEffect(function () {\n    calculateTableHeight();\n    calculateTableContextHeight();\n  }, [fillHeight]);\n  useUpdateLayoutEffect(function () {\n    calculateTableWidth();\n    calculateTableContentWidth();\n    calculateTableContextHeight();\n  }, [data, heightProp, contentHeight.current, expandedRowKeys, children, calculateTableContextHeight, calculateTableContentWidth]);\n  var setScrollY = useCallback(function (value) {\n    scrollY.current = value;\n  }, []);\n  var setScrollX = useCallback(function (value) {\n    scrollX.current = value;\n  }, []);\n\n  var getTableHeight = function getTableHeight() {\n    if (fillHeight) {\n      return tableHeight.current;\n    }\n\n    if ((data === null || data === void 0 ? void 0 : data.length) === 0 && autoHeight) {\n      return heightProp;\n    }\n\n    return autoHeight ? Math.max(headerHeight + contentHeight.current, minHeight) : heightProp;\n  };\n\n  return {\n    contentHeight: contentHeight,\n    contentWidth: contentWidth,\n    minScrollY: minScrollY,\n    minScrollX: minScrollX,\n    scrollY: scrollY,\n    scrollX: scrollX,\n    tableWidth: tableWidth,\n    headerOffset: headerOffset,\n    tableOffset: tableOffset,\n    getTableHeight: getTableHeight,\n    setScrollY: setScrollY,\n    setScrollX: setScrollX\n  };\n};\n\nexport default useTableDimension;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}