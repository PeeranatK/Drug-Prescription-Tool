{"ast":null,"code":"/**\n * Remove a class from a given element\n *\n * @param target The element to remove the class from\n * @param className The class to be removed\n *\n * @returns The target element\n */\nexport default function removeClass(target, className) {\n  if (className) {\n    if (target.classList) {\n      target.classList.remove(className);\n    } else {\n      target.className = target.className.replace(new RegExp(\"(^|\\\\s)\" + className + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n      .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n    }\n  }\n\n  return target;\n}","map":{"version":3,"names":["removeClass","target","className","classList","remove","replace","RegExp"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/dom-lib/esm/removeClass.js"],"sourcesContent":["/**\n * Remove a class from a given element\n *\n * @param target The element to remove the class from\n * @param className The class to be removed\n *\n * @returns The target element\n */\nexport default function removeClass(target, className) {\n  if (className) {\n    if (target.classList) {\n      target.classList.remove(className);\n    } else {\n      target.className = target.className.replace(new RegExp(\"(^|\\\\s)\" + className + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n      .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n    }\n  }\n\n  return target;\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,WAAW,CAACC,MAAM,EAAEC,SAAS,EAAE;EACrD,IAAIA,SAAS,EAAE;IACb,IAAID,MAAM,CAACE,SAAS,EAAE;MACpBF,MAAM,CAACE,SAAS,CAACC,MAAM,CAACF,SAAS,CAAC;IACpC,CAAC,MAAM;MACLD,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACC,SAAS,CAACG,OAAO,CAAC,IAAIC,MAAM,CAAC,SAAS,GAAGJ,SAAS,GAAG,WAAW,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAACG,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;MAAA,CAC5HA,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAC;IAC9B;EACF;;EAEA,OAAOJ,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}