{"ast":null,"code":"import UserAgent from './UserAgent';\nimport isEventSupported from './isEventSupported'; // Reasonable defaults\n\nvar PIXEL_STEP = 10;\nvar LINE_HEIGHT = 40;\nvar PAGE_HEIGHT = 800;\nfunction normalizeWheel(event) {\n  var sX = 0;\n  var sY = 0; // spinX, spinY\n\n  var pX = 0;\n  var pY = 0; // pixelX, pixelY\n  // Legacy\n\n  if ('detail' in event) {\n    sY = event.detail;\n  }\n  if ('wheelDelta' in event) {\n    sY = -event.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in event) {\n    sY = -event.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in event) {\n    sX = -event.wheelDeltaX / 120;\n  } // side scrolling on FF with DOMMouseScroll\n\n  if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n  if ('deltaY' in event) {\n    pY = event.deltaY;\n  }\n  if ('deltaX' in event) {\n    pX = event.deltaX;\n  }\n  if ((pX || pY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  } // Fall-back if spin cannot be determined\n\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY\n  };\n}\n/**\n * The best combination if you prefer spinX + spinY normalization.  It favors\n * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n * 'wheel' event, making spin speed determination impossible.\n */\n\nnormalizeWheel.getEventType = function () {\n  if (UserAgent.firefox()) {\n    return 'DOMMouseScroll';\n  }\n  return isEventSupported('wheel') ? 'wheel' : 'mousewheel';\n};\nexport default normalizeWheel;","map":{"version":3,"names":["UserAgent","isEventSupported","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","normalizeWheel","event","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","getEventType","firefox"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/dom-lib/esm/utils/normalizeWheel.js"],"sourcesContent":["import UserAgent from './UserAgent';\nimport isEventSupported from './isEventSupported'; // Reasonable defaults\n\nvar PIXEL_STEP = 10;\nvar LINE_HEIGHT = 40;\nvar PAGE_HEIGHT = 800;\n\nfunction normalizeWheel(event) {\n  var sX = 0;\n  var sY = 0; // spinX, spinY\n\n  var pX = 0;\n  var pY = 0; // pixelX, pixelY\n  // Legacy\n\n  if ('detail' in event) {\n    sY = event.detail;\n  }\n\n  if ('wheelDelta' in event) {\n    sY = -event.wheelDelta / 120;\n  }\n\n  if ('wheelDeltaY' in event) {\n    sY = -event.wheelDeltaY / 120;\n  }\n\n  if ('wheelDeltaX' in event) {\n    sX = -event.wheelDeltaX / 120;\n  } // side scrolling on FF with DOMMouseScroll\n\n\n  if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in event) {\n    pY = event.deltaY;\n  }\n\n  if ('deltaX' in event) {\n    pX = event.deltaX;\n  }\n\n  if ((pX || pY) && event.deltaMode) {\n    if (event.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  } // Fall-back if spin cannot be determined\n\n\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY\n  };\n}\n/**\n * The best combination if you prefer spinX + spinY normalization.  It favors\n * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n * 'wheel' event, making spin speed determination impossible.\n */\n\n\nnormalizeWheel.getEventType = function () {\n  if (UserAgent.firefox()) {\n    return 'DOMMouseScroll';\n  }\n\n  return isEventSupported('wheel') ? 'wheel' : 'mousewheel';\n};\n\nexport default normalizeWheel;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,OAAOC,gBAAgB,MAAM,oBAAoB,CAAC,CAAC;;AAEnD,IAAIC,UAAU,GAAG,EAAE;AACnB,IAAIC,WAAW,GAAG,EAAE;AACpB,IAAIC,WAAW,GAAG,GAAG;AAErB,SAASC,cAAc,CAACC,KAAK,EAAE;EAC7B,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAG,CAAC,CAAC,CAAC;;EAEZ,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAG,CAAC,CAAC,CAAC;EACZ;;EAEA,IAAI,QAAQ,IAAIJ,KAAK,EAAE;IACrBE,EAAE,GAAGF,KAAK,CAACK,MAAM;EACnB;EAEA,IAAI,YAAY,IAAIL,KAAK,EAAE;IACzBE,EAAE,GAAG,CAACF,KAAK,CAACM,UAAU,GAAG,GAAG;EAC9B;EAEA,IAAI,aAAa,IAAIN,KAAK,EAAE;IAC1BE,EAAE,GAAG,CAACF,KAAK,CAACO,WAAW,GAAG,GAAG;EAC/B;EAEA,IAAI,aAAa,IAAIP,KAAK,EAAE;IAC1BC,EAAE,GAAG,CAACD,KAAK,CAACQ,WAAW,GAAG,GAAG;EAC/B,CAAC,CAAC;;EAGF,IAAI,MAAM,IAAIR,KAAK,IAAIA,KAAK,CAACS,IAAI,KAAKT,KAAK,CAACU,eAAe,EAAE;IAC3DT,EAAE,GAAGC,EAAE;IACPA,EAAE,GAAG,CAAC;EACR;EAEAC,EAAE,GAAGF,EAAE,GAAGL,UAAU;EACpBQ,EAAE,GAAGF,EAAE,GAAGN,UAAU;EAEpB,IAAI,QAAQ,IAAII,KAAK,EAAE;IACrBI,EAAE,GAAGJ,KAAK,CAACW,MAAM;EACnB;EAEA,IAAI,QAAQ,IAAIX,KAAK,EAAE;IACrBG,EAAE,GAAGH,KAAK,CAACY,MAAM;EACnB;EAEA,IAAI,CAACT,EAAE,IAAIC,EAAE,KAAKJ,KAAK,CAACa,SAAS,EAAE;IACjC,IAAIb,KAAK,CAACa,SAAS,KAAK,CAAC,EAAE;MACzB;MACAV,EAAE,IAAIN,WAAW;MACjBO,EAAE,IAAIP,WAAW;IACnB,CAAC,MAAM;MACL;MACAM,EAAE,IAAIL,WAAW;MACjBM,EAAE,IAAIN,WAAW;IACnB;EACF,CAAC,CAAC;;EAGF,IAAIK,EAAE,IAAI,CAACF,EAAE,EAAE;IACbA,EAAE,GAAGE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EACtB;EAEA,IAAIC,EAAE,IAAI,CAACF,EAAE,EAAE;IACbA,EAAE,GAAGE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EACtB;EAEA,OAAO;IACLU,KAAK,EAAEb,EAAE;IACTc,KAAK,EAAEb,EAAE;IACTc,MAAM,EAAEb,EAAE;IACVc,MAAM,EAAEb;EACV,CAAC;AACH;AACA;AACA;AACA;AACA;AACA;;AAGAL,cAAc,CAACmB,YAAY,GAAG,YAAY;EACxC,IAAIxB,SAAS,CAACyB,OAAO,EAAE,EAAE;IACvB,OAAO,gBAAgB;EACzB;EAEA,OAAOxB,gBAAgB,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,YAAY;AAC3D,CAAC;AAED,eAAeI,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}