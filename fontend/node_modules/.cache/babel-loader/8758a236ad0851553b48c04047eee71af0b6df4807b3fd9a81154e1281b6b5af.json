{"ast":null,"code":"import ownerDocument from './ownerDocument';\nimport getWindow from './getWindow';\nimport contains from './contains';\n\n/**\n * Get the offset of a DOM element\n * @param node The DOM element\n * @returns The offset of the DOM element\n */\nexport default function getOffset(node) {\n  var doc = ownerDocument(node);\n  var win = getWindow(doc);\n  var docElem = doc && doc.documentElement;\n  var box = {\n    top: 0,\n    left: 0,\n    height: 0,\n    width: 0\n  };\n  if (!doc) {\n    return null;\n  } // Make sure it's not a disconnected DOM node\n\n  if (!contains(docElem, node)) {\n    return box;\n  }\n  if ((node === null || node === void 0 ? void 0 : node.getBoundingClientRect) !== undefined) {\n    box = node.getBoundingClientRect();\n  }\n  if ((box.width || box.height) && docElem && win) {\n    box = {\n      top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),\n      left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),\n      width: (box.width === null ? node.offsetWidth : box.width) || 0,\n      height: (box.height === null ? node.offsetHeight : box.height) || 0\n    };\n  }\n  return box;\n}","map":{"version":3,"names":["ownerDocument","getWindow","contains","getOffset","node","doc","win","docElem","documentElement","box","top","left","height","width","getBoundingClientRect","undefined","pageYOffset","scrollTop","clientTop","pageXOffset","scrollLeft","clientLeft","offsetWidth","offsetHeight"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/dom-lib/esm/getOffset.js"],"sourcesContent":["import ownerDocument from './ownerDocument';\nimport getWindow from './getWindow';\nimport contains from './contains';\n\n/**\n * Get the offset of a DOM element\n * @param node The DOM element\n * @returns The offset of the DOM element\n */\nexport default function getOffset(node) {\n  var doc = ownerDocument(node);\n  var win = getWindow(doc);\n  var docElem = doc && doc.documentElement;\n  var box = {\n    top: 0,\n    left: 0,\n    height: 0,\n    width: 0\n  };\n\n  if (!doc) {\n    return null;\n  } // Make sure it's not a disconnected DOM node\n\n\n  if (!contains(docElem, node)) {\n    return box;\n  }\n\n  if ((node === null || node === void 0 ? void 0 : node.getBoundingClientRect) !== undefined) {\n    box = node.getBoundingClientRect();\n  }\n\n  if ((box.width || box.height) && docElem && win) {\n    box = {\n      top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),\n      left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),\n      width: (box.width === null ? node.offsetWidth : box.width) || 0,\n      height: (box.height === null ? node.offsetHeight : box.height) || 0\n    };\n  }\n\n  return box;\n}"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,SAAS,CAACC,IAAI,EAAE;EACtC,IAAIC,GAAG,GAAGL,aAAa,CAACI,IAAI,CAAC;EAC7B,IAAIE,GAAG,GAAGL,SAAS,CAACI,GAAG,CAAC;EACxB,IAAIE,OAAO,GAAGF,GAAG,IAAIA,GAAG,CAACG,eAAe;EACxC,IAAIC,GAAG,GAAG;IACRC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE;EACT,CAAC;EAED,IAAI,CAACR,GAAG,EAAE;IACR,OAAO,IAAI;EACb,CAAC,CAAC;;EAGF,IAAI,CAACH,QAAQ,CAACK,OAAO,EAAEH,IAAI,CAAC,EAAE;IAC5B,OAAOK,GAAG;EACZ;EAEA,IAAI,CAACL,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACU,qBAAqB,MAAMC,SAAS,EAAE;IAC1FN,GAAG,GAAGL,IAAI,CAACU,qBAAqB,EAAE;EACpC;EAEA,IAAI,CAACL,GAAG,CAACI,KAAK,IAAIJ,GAAG,CAACG,MAAM,KAAKL,OAAO,IAAID,GAAG,EAAE;IAC/CG,GAAG,GAAG;MACJC,GAAG,EAAED,GAAG,CAACC,GAAG,IAAIJ,GAAG,CAACU,WAAW,IAAIT,OAAO,CAACU,SAAS,CAAC,IAAIV,OAAO,CAACW,SAAS,IAAI,CAAC,CAAC;MAChFP,IAAI,EAAEF,GAAG,CAACE,IAAI,IAAIL,GAAG,CAACa,WAAW,IAAIZ,OAAO,CAACa,UAAU,CAAC,IAAIb,OAAO,CAACc,UAAU,IAAI,CAAC,CAAC;MACpFR,KAAK,EAAE,CAACJ,GAAG,CAACI,KAAK,KAAK,IAAI,GAAGT,IAAI,CAACkB,WAAW,GAAGb,GAAG,CAACI,KAAK,KAAK,CAAC;MAC/DD,MAAM,EAAE,CAACH,GAAG,CAACG,MAAM,KAAK,IAAI,GAAGR,IAAI,CAACmB,YAAY,GAAGd,GAAG,CAACG,MAAM,KAAK;IACpE,CAAC;EACH;EAEA,OAAOH,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}