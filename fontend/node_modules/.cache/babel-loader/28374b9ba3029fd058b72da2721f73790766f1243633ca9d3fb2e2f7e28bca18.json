{"ast":null,"code":"/**\n * Source code reference from:\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/dom/DOMMouseMoveTracker.js\n */\nimport on from './on';\nimport cancelAnimationFramePolyfill from './cancelAnimationFramePolyfill';\nimport requestAnimationFramePolyfill from './requestAnimationFramePolyfill';\n/**\n * Mouse drag tracker, get the coordinate value where the mouse moves in time.\n *\n * ```typescript\n * const tracker = new DOMMouseMoveTracker(\n *   onMove:(deltaX: number, deltaY: number, moveEvent: Object) => void,\n *   onMoveEnd:() => void,\n *   container: HTMLElement\n * );\n * ```\n */\n\nvar DOMMouseMoveTracker = /*#__PURE__*/function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function DOMMouseMoveTracker(onMove, onMoveEnd, domNode) {\n    var _this = this;\n    this.isDraggingStatus = false;\n    this.animationFrameID = null;\n    this.domNode = void 0;\n    this.onMove = null;\n    this.onMoveEnd = null;\n    this.eventMoveToken = null;\n    this.eventUpToken = null;\n    this.moveEvent = null;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.x = 0;\n    this.y = 0;\n    this.isDragging = function () {\n      return _this.isDraggingStatus;\n    };\n    this.onMouseMove = function (event) {\n      var x = event.clientX;\n      var y = event.clientY;\n      _this.deltaX += x - _this.x;\n      _this.deltaY += y - _this.y;\n      if (_this.animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFramePolyfill` to avoid over-updating.\n        _this.animationFrameID = requestAnimationFramePolyfill(_this.didMouseMove);\n      }\n      _this.x = x;\n      _this.y = y;\n      _this.moveEvent = event;\n      event.preventDefault();\n    };\n    this.didMouseMove = function () {\n      _this.animationFrameID = null;\n      _this.onMove(_this.deltaX, _this.deltaY, _this.moveEvent);\n      _this.deltaX = 0;\n      _this.deltaY = 0;\n    };\n    this.onMouseUp = function (event) {\n      if (_this.animationFrameID) {\n        _this.didMouseMove();\n      }\n      _this.onMoveEnd && _this.onMoveEnd(event);\n    };\n    this.domNode = domNode;\n    this.onMove = onMove;\n    this.onMoveEnd = onMoveEnd;\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n\n  var _proto = DOMMouseMoveTracker.prototype;\n  _proto.captureMouseMoves = function captureMouseMoves(event) {\n    if (!this.eventMoveToken && !this.eventUpToken) {\n      this.eventMoveToken = on(this.domNode, 'mousemove', this.onMouseMove);\n      this.eventUpToken = on(this.domNode, 'mouseup', this.onMouseUp);\n    }\n    if (!this.isDraggingStatus) {\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.isDraggingStatus = true;\n      this.x = event.clientX;\n      this.y = event.clientY;\n    }\n    event.preventDefault();\n  }\n  /**\n   * These releases all of the listeners on document.body.\n   */;\n\n  _proto.releaseMouseMoves = function releaseMouseMoves() {\n    if (this.eventMoveToken) {\n      this.eventMoveToken.off();\n      this.eventMoveToken = null;\n    }\n    if (this.eventUpToken) {\n      this.eventUpToken.off();\n      this.eventUpToken = null;\n    }\n    if (this.animationFrameID !== null) {\n      cancelAnimationFramePolyfill(this.animationFrameID);\n      this.animationFrameID = null;\n    }\n    if (this.isDraggingStatus) {\n      this.isDraggingStatus = false;\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  /**\n   * Returns whether or not if the mouse movement is being tracked.\n   */;\n\n  return DOMMouseMoveTracker;\n}();\nexport default DOMMouseMoveTracker;","map":{"version":3,"names":["on","cancelAnimationFramePolyfill","requestAnimationFramePolyfill","DOMMouseMoveTracker","onMove","onMoveEnd","domNode","_this","isDraggingStatus","animationFrameID","eventMoveToken","eventUpToken","moveEvent","deltaX","deltaY","x","y","isDragging","onMouseMove","event","clientX","clientY","didMouseMove","preventDefault","onMouseUp","_proto","prototype","captureMouseMoves","releaseMouseMoves","off"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/dom-lib/esm/DOMMouseMoveTracker.js"],"sourcesContent":["/**\n * Source code reference from:\n * https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/dom/DOMMouseMoveTracker.js\n */\nimport on from './on';\nimport cancelAnimationFramePolyfill from './cancelAnimationFramePolyfill';\nimport requestAnimationFramePolyfill from './requestAnimationFramePolyfill';\n/**\n * Mouse drag tracker, get the coordinate value where the mouse moves in time.\n *\n * ```typescript\n * const tracker = new DOMMouseMoveTracker(\n *   onMove:(deltaX: number, deltaY: number, moveEvent: Object) => void,\n *   onMoveEnd:() => void,\n *   container: HTMLElement\n * );\n * ```\n */\n\nvar DOMMouseMoveTracker = /*#__PURE__*/function () {\n  /**\n   * onMove is the callback that will be called on every mouse move.\n   * onMoveEnd is called on mouse up when movement has ended.\n   */\n  function DOMMouseMoveTracker(onMove, onMoveEnd, domNode) {\n    var _this = this;\n\n    this.isDraggingStatus = false;\n    this.animationFrameID = null;\n    this.domNode = void 0;\n    this.onMove = null;\n    this.onMoveEnd = null;\n    this.eventMoveToken = null;\n    this.eventUpToken = null;\n    this.moveEvent = null;\n    this.deltaX = 0;\n    this.deltaY = 0;\n    this.x = 0;\n    this.y = 0;\n\n    this.isDragging = function () {\n      return _this.isDraggingStatus;\n    };\n\n    this.onMouseMove = function (event) {\n      var x = event.clientX;\n      var y = event.clientY;\n      _this.deltaX += x - _this.x;\n      _this.deltaY += y - _this.y;\n\n      if (_this.animationFrameID === null) {\n        // The mouse may move faster then the animation frame does.\n        // Use `requestAnimationFramePolyfill` to avoid over-updating.\n        _this.animationFrameID = requestAnimationFramePolyfill(_this.didMouseMove);\n      }\n\n      _this.x = x;\n      _this.y = y;\n      _this.moveEvent = event;\n      event.preventDefault();\n    };\n\n    this.didMouseMove = function () {\n      _this.animationFrameID = null;\n\n      _this.onMove(_this.deltaX, _this.deltaY, _this.moveEvent);\n\n      _this.deltaX = 0;\n      _this.deltaY = 0;\n    };\n\n    this.onMouseUp = function (event) {\n      if (_this.animationFrameID) {\n        _this.didMouseMove();\n      }\n\n      _this.onMoveEnd && _this.onMoveEnd(event);\n    };\n\n    this.domNode = domNode;\n    this.onMove = onMove;\n    this.onMoveEnd = onMoveEnd;\n  }\n  /**\n   * This is to set up the listeners for listening to mouse move\n   * and mouse up signaling the movement has ended. Please note that these\n   * listeners are added at the document.body level. It takes in an event\n   * in order to grab inital state.\n   */\n\n\n  var _proto = DOMMouseMoveTracker.prototype;\n\n  _proto.captureMouseMoves = function captureMouseMoves(event) {\n    if (!this.eventMoveToken && !this.eventUpToken) {\n      this.eventMoveToken = on(this.domNode, 'mousemove', this.onMouseMove);\n      this.eventUpToken = on(this.domNode, 'mouseup', this.onMouseUp);\n    }\n\n    if (!this.isDraggingStatus) {\n      this.deltaX = 0;\n      this.deltaY = 0;\n      this.isDraggingStatus = true;\n      this.x = event.clientX;\n      this.y = event.clientY;\n    }\n\n    event.preventDefault();\n  }\n  /**\n   * These releases all of the listeners on document.body.\n   */\n  ;\n\n  _proto.releaseMouseMoves = function releaseMouseMoves() {\n    if (this.eventMoveToken) {\n      this.eventMoveToken.off();\n      this.eventMoveToken = null;\n    }\n\n    if (this.eventUpToken) {\n      this.eventUpToken.off();\n      this.eventUpToken = null;\n    }\n\n    if (this.animationFrameID !== null) {\n      cancelAnimationFramePolyfill(this.animationFrameID);\n      this.animationFrameID = null;\n    }\n\n    if (this.isDraggingStatus) {\n      this.isDraggingStatus = false;\n      this.x = 0;\n      this.y = 0;\n    }\n  }\n  /**\n   * Returns whether or not if the mouse movement is being tracked.\n   */\n  ;\n\n  return DOMMouseMoveTracker;\n}();\n\nexport default DOMMouseMoveTracker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}