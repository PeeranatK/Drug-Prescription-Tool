{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport getOffsetParent from './getOffsetParent';\nimport getOffset from './getOffset';\nimport getStyle from './getStyle';\nimport scrollTop from './scrollTop';\nimport scrollLeft from './scrollLeft';\nimport nodeName from './nodeName';\n/**\n * Get the position of a DOM element\n * @param node  The DOM element\n * @param offsetParent  The offset parent of the DOM element\n * @param calcMargin  Whether to calculate the margin\n * @returns  The position of the DOM element\n */\n\nexport default function getPosition(node, offsetParent, calcMargin) {\n  if (calcMargin === void 0) {\n    calcMargin = true;\n  }\n  var parentOffset = {\n    top: 0,\n    left: 0\n  };\n  var offset = null; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n  // because it is its only offset parent\n\n  if (getStyle(node, 'position') === 'fixed') {\n    offset = node.getBoundingClientRect();\n  } else {\n    offsetParent = offsetParent || getOffsetParent(node);\n    offset = getOffset(node);\n    if (nodeName(offsetParent) !== 'html') {\n      var nextParentOffset = getOffset(offsetParent);\n      if (nextParentOffset) {\n        parentOffset.top = nextParentOffset.top;\n        parentOffset.left = nextParentOffset.left;\n      }\n    }\n    parentOffset.top += parseInt(getStyle(offsetParent, 'borderTopWidth'), 10) - scrollTop(offsetParent) || 0;\n    parentOffset.left += parseInt(getStyle(offsetParent, 'borderLeftWidth'), 10) - scrollLeft(offsetParent) || 0;\n  } // Subtract parent offsets and node margins\n\n  if (offset) {\n    var marginTop = calcMargin ? parseInt(getStyle(node, 'marginTop'), 10) || 0 : 0;\n    var marginLeft = calcMargin ? parseInt(getStyle(node, 'marginLeft'), 10) || 0 : 0;\n    return _extends({}, offset, {\n      top: offset.top - parentOffset.top - marginTop,\n      left: offset.left - parentOffset.left - marginLeft\n    });\n  }\n  return null;\n}","map":{"version":3,"names":["_extends","getOffsetParent","getOffset","getStyle","scrollTop","scrollLeft","nodeName","getPosition","node","offsetParent","calcMargin","parentOffset","top","left","offset","getBoundingClientRect","nextParentOffset","parseInt","marginTop","marginLeft"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/dom-lib/esm/getPosition.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport getOffsetParent from './getOffsetParent';\nimport getOffset from './getOffset';\nimport getStyle from './getStyle';\nimport scrollTop from './scrollTop';\nimport scrollLeft from './scrollLeft';\nimport nodeName from './nodeName';\n/**\n * Get the position of a DOM element\n * @param node  The DOM element\n * @param offsetParent  The offset parent of the DOM element\n * @param calcMargin  Whether to calculate the margin\n * @returns  The position of the DOM element\n */\n\nexport default function getPosition(node, offsetParent, calcMargin) {\n  if (calcMargin === void 0) {\n    calcMargin = true;\n  }\n\n  var parentOffset = {\n    top: 0,\n    left: 0\n  };\n  var offset = null; // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n  // because it is its only offset parent\n\n  if (getStyle(node, 'position') === 'fixed') {\n    offset = node.getBoundingClientRect();\n  } else {\n    offsetParent = offsetParent || getOffsetParent(node);\n    offset = getOffset(node);\n\n    if (nodeName(offsetParent) !== 'html') {\n      var nextParentOffset = getOffset(offsetParent);\n\n      if (nextParentOffset) {\n        parentOffset.top = nextParentOffset.top;\n        parentOffset.left = nextParentOffset.left;\n      }\n    }\n\n    parentOffset.top += parseInt(getStyle(offsetParent, 'borderTopWidth'), 10) - scrollTop(offsetParent) || 0;\n    parentOffset.left += parseInt(getStyle(offsetParent, 'borderLeftWidth'), 10) - scrollLeft(offsetParent) || 0;\n  } // Subtract parent offsets and node margins\n\n\n  if (offset) {\n    var marginTop = calcMargin ? parseInt(getStyle(node, 'marginTop'), 10) || 0 : 0;\n    var marginLeft = calcMargin ? parseInt(getStyle(node, 'marginLeft'), 10) || 0 : 0;\n    return _extends({}, offset, {\n      top: offset.top - parentOffset.top - marginTop,\n      left: offset.left - parentOffset.left - marginLeft\n    });\n  }\n\n  return null;\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,WAAW,CAACC,IAAI,EAAEC,YAAY,EAAEC,UAAU,EAAE;EAClE,IAAIA,UAAU,KAAK,KAAK,CAAC,EAAE;IACzBA,UAAU,GAAG,IAAI;EACnB;EAEA,IAAIC,YAAY,GAAG;IACjBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE;EACR,CAAC;EACD,IAAIC,MAAM,GAAG,IAAI,CAAC,CAAC;EACnB;;EAEA,IAAIX,QAAQ,CAACK,IAAI,EAAE,UAAU,CAAC,KAAK,OAAO,EAAE;IAC1CM,MAAM,GAAGN,IAAI,CAACO,qBAAqB,EAAE;EACvC,CAAC,MAAM;IACLN,YAAY,GAAGA,YAAY,IAAIR,eAAe,CAACO,IAAI,CAAC;IACpDM,MAAM,GAAGZ,SAAS,CAACM,IAAI,CAAC;IAExB,IAAIF,QAAQ,CAACG,YAAY,CAAC,KAAK,MAAM,EAAE;MACrC,IAAIO,gBAAgB,GAAGd,SAAS,CAACO,YAAY,CAAC;MAE9C,IAAIO,gBAAgB,EAAE;QACpBL,YAAY,CAACC,GAAG,GAAGI,gBAAgB,CAACJ,GAAG;QACvCD,YAAY,CAACE,IAAI,GAAGG,gBAAgB,CAACH,IAAI;MAC3C;IACF;IAEAF,YAAY,CAACC,GAAG,IAAIK,QAAQ,CAACd,QAAQ,CAACM,YAAY,EAAE,gBAAgB,CAAC,EAAE,EAAE,CAAC,GAAGL,SAAS,CAACK,YAAY,CAAC,IAAI,CAAC;IACzGE,YAAY,CAACE,IAAI,IAAII,QAAQ,CAACd,QAAQ,CAACM,YAAY,EAAE,iBAAiB,CAAC,EAAE,EAAE,CAAC,GAAGJ,UAAU,CAACI,YAAY,CAAC,IAAI,CAAC;EAC9G,CAAC,CAAC;;EAGF,IAAIK,MAAM,EAAE;IACV,IAAII,SAAS,GAAGR,UAAU,GAAGO,QAAQ,CAACd,QAAQ,CAACK,IAAI,EAAE,WAAW,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;IAC/E,IAAIW,UAAU,GAAGT,UAAU,GAAGO,QAAQ,CAACd,QAAQ,CAACK,IAAI,EAAE,YAAY,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC;IACjF,OAAOR,QAAQ,CAAC,CAAC,CAAC,EAAEc,MAAM,EAAE;MAC1BF,GAAG,EAAEE,MAAM,CAACF,GAAG,GAAGD,YAAY,CAACC,GAAG,GAAGM,SAAS;MAC9CL,IAAI,EAAEC,MAAM,CAACD,IAAI,GAAGF,YAAY,CAACE,IAAI,GAAGM;IAC1C,CAAC,CAAC;EACJ;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}