{"ast":null,"code":"var baseSlice = require('./_baseSlice'),\n  isIterateeCall = require('./_isIterateeCall'),\n  toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction slice(array, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n    start = 0;\n    end = length;\n  } else {\n    start = start == null ? 0 : toInteger(start);\n    end = end === undefined ? length : toInteger(end);\n  }\n  return baseSlice(array, start, end);\n}\nmodule.exports = slice;","map":{"version":3,"names":["baseSlice","require","isIterateeCall","toInteger","slice","array","start","end","length","undefined","module","exports"],"sources":["/Users/peeranat/Desktop/Project copy 2/fontend/node_modules/lodash/slice.js"],"sourcesContent":["var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction slice(array, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n    start = 0;\n    end = length;\n  }\n  else {\n    start = start == null ? 0 : toInteger(start);\n    end = end === undefined ? length : toInteger(end);\n  }\n  return baseSlice(array, start, end);\n}\n\nmodule.exports = slice;\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;EACnCC,cAAc,GAAGD,OAAO,CAAC,mBAAmB,CAAC;EAC7CE,SAAS,GAAGF,OAAO,CAAC,aAAa,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,KAAK,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAChC,IAAIC,MAAM,GAAGH,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACG,MAAM;EAC7C,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,EAAE;EACX;EACA,IAAID,GAAG,IAAI,OAAOA,GAAG,IAAI,QAAQ,IAAIL,cAAc,CAACG,KAAK,EAAEC,KAAK,EAAEC,GAAG,CAAC,EAAE;IACtED,KAAK,GAAG,CAAC;IACTC,GAAG,GAAGC,MAAM;EACd,CAAC,MACI;IACHF,KAAK,GAAGA,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGH,SAAS,CAACG,KAAK,CAAC;IAC5CC,GAAG,GAAGA,GAAG,KAAKE,SAAS,GAAGD,MAAM,GAAGL,SAAS,CAACI,GAAG,CAAC;EACnD;EACA,OAAOP,SAAS,CAACK,KAAK,EAAEC,KAAK,EAAEC,GAAG,CAAC;AACrC;AAEAG,MAAM,CAACC,OAAO,GAAGP,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}